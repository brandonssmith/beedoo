{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createContext as n, useContext as e } from \"react\";\nconst r = n(null);\nfunction t(n, e) {\n  let r = null;\n  return null != n && (r = n[1]), {\n    getTheme: function () {\n      return null != e ? e : null != r ? r.getTheme() : null;\n    }\n  };\n}\nfunction o() {\n  const n = e(r);\n  return null == n && function (n) {\n    const r = new URL(\"https://lexical.dev/docs/error\"),\n      t = new URLSearchParams();\n    t.append(\"code\", n);\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n    for (const n of e) t.append(\"v\", n);\n    throw r.search = t.toString(), Error(`Minified Lexical error #${n}; visit ${r.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);\n  }(8), n;\n}\nexport { r as LexicalComposerContext, t as createLexicalComposerContext, o as useLexicalComposerContext };","map":{"version":3,"names":["createContext","n","useContext","e","r","t","getTheme","o","URL","URLSearchParams","append","_len","arguments","length","Array","_key","search","toString","Error","LexicalComposerContext","createLexicalComposerContext","useLexicalComposerContext"],"sources":["C:/Code/beedoo/node_modules/@lexical/react/LexicalComposerContext.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{createContext as n,useContext as e}from\"react\";const r=n(null);function t(n,e){let r=null;return null!=n&&(r=n[1]),{getTheme:function(){return null!=e?e:null!=r?r.getTheme():null}}}function o(){const n=e(r);return null==n&&function(n,...e){const r=new URL(\"https://lexical.dev/docs/error\"),t=new URLSearchParams;t.append(\"code\",n);for(const n of e)t.append(\"v\",n);throw r.search=t.toString(),Error(`Minified Lexical error #${n}; visit ${r.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}(8),n}export{r as LexicalComposerContext,t as createLexicalComposerContext,o as useLexicalComposerContext};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOA,aAAa,IAAIC,CAAC,EAACC,UAAU,IAAIC,CAAC,QAAK,OAAO;AAAC,MAAMC,CAAC,GAACH,CAAC,CAAC,IAAI,CAAC;AAAC,SAASI,CAACA,CAACJ,CAAC,EAACE,CAAC,EAAC;EAAC,IAAIC,CAAC,GAAC,IAAI;EAAC,OAAO,IAAI,IAAEH,CAAC,KAAGG,CAAC,GAACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;IAACK,QAAQ,EAAC,SAAAA,CAAA,EAAU;MAAC,OAAO,IAAI,IAAEH,CAAC,GAACA,CAAC,GAAC,IAAI,IAAEC,CAAC,GAACA,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAC,IAAI;IAAA;EAAC,CAAC;AAAA;AAAC,SAASC,CAACA,CAAA,EAAE;EAAC,MAAMN,CAAC,GAACE,CAAC,CAACC,CAAC,CAAC;EAAC,OAAO,IAAI,IAAEH,CAAC,IAAE,UAASA,CAAC,EAAM;IAAC,MAAMG,CAAC,GAAC,IAAII,GAAG,CAAC,gCAAgC,CAAC;MAACH,CAAC,GAAC,IAAII,eAAe,CAAD,CAAC;IAACJ,CAAC,CAACK,MAAM,CAAC,MAAM,EAACT,CAAC,CAAC;IAAC,SAAAU,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA9FV,CAAC,OAAAW,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAADZ,CAAC,CAAAY,IAAA,QAAAH,SAAA,CAAAG,IAAA;IAAA;IAA6F,KAAI,MAAMd,CAAC,IAAIE,CAAC,EAACE,CAAC,CAACK,MAAM,CAAC,GAAG,EAACT,CAAC,CAAC;IAAC,MAAMG,CAAC,CAACY,MAAM,GAACX,CAAC,CAACY,QAAQ,CAAC,CAAC,EAACC,KAAK,CAAC,2BAA2BjB,CAAC,WAAWG,CAAC,CAACa,QAAQ,CAAC,CAAC,gHAAgH,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC,EAAChB,CAAC;AAAA;AAAC,SAAOG,CAAC,IAAIe,sBAAsB,EAACd,CAAC,IAAIe,4BAA4B,EAACb,CAAC,IAAIc,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}