{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{LexicalComposer}from'@lexical/react/LexicalComposer';import{RichTextPlugin}from'@lexical/react/LexicalRichTextPlugin';import{ContentEditable}from'@lexical/react/LexicalContentEditable';import{HistoryPlugin}from'@lexical/react/LexicalHistoryPlugin';import{AutoFocusPlugin}from'@lexical/react/LexicalAutoFocusPlugin';import{useLexicalComposerContext}from'@lexical/react/LexicalComposerContext';import{$getRoot,$getSelection,$isRangeSelection}from'lexical';import{Bold,Italic,Underline,List,Link,AlignLeft,AlignCenter,AlignRight,Heading1,Heading2,Heading3}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IMAGE_UPLOAD_ENDPOINT='/.netlify/functions/upload-image';// Custom onChange plugin\nfunction CustomOnChangePlugin(_ref){let{onChange}=_ref;const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref2=>{let{editorState}=_ref2;editorState.read(()=>{const root=$getRoot();const text=root.getTextContent();onChange(text);});});},[editor,onChange]);return null;}// Markdown shortcuts plugin\nfunction MarkdownShortcutsPlugin(){const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref3=>{let{editorState,dirtyElements}=_ref3;if(dirtyElements.size===0)return;editorState.read(()=>{const selection=$getSelection();if(!$isRangeSelection(selection))return;const text=selection.getTextContent();// Handle markdown shortcuts\nif(text.startsWith('**')&&text.endsWith('**')&&text.length>4){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(2,-2);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}else if(text.startsWith('*')&&text.endsWith('*')&&text.length>2){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(1,-1);newSelection.insertText(cleanText);newSelection.formatText('italic');}});}else if(text.startsWith('~')&&text.endsWith('~')&&text.length>2){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(1,-1);newSelection.insertText(cleanText);newSelection.formatText('underline');}});}else if(text.startsWith('# ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(2);newSelection.insertText(cleanText);// Apply header formatting (simplified - just make it bold and larger)\nnewSelection.formatText('bold');}});}else if(text.startsWith('## ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(3);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}else if(text.startsWith('### ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(4);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}});});},[editor]);return null;}// Toolbar component\nfunction ToolbarPlugin(){const[editor]=useLexicalComposerContext();const formatText=format=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){selection.formatText(format);}});};const formatHeader=level=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// For now, just make headers bold\n// In a full implementation, you'd create proper header nodes\nselection.formatText('bold');}});};const alignText=alignment=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// For now, just insert alignment markers\n// In a full implementation, you'd set proper CSS alignment\nconst marker=alignment==='left'?'':alignment==='center'?' [CENTER] ':' [RIGHT] ';selection.insertText(marker);}});};const insertLink=()=>{const url=prompt('Enter URL:');if(url){const linkText=prompt('Enter link text (optional):',url);const displayText=linkText||url;editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// Create markdown-style link\nconst markdownLink=`[${displayText}](${url})`;selection.insertText(markdownLink);}});}};const toggleList=()=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// Simple list implementation - just add bullet points\nconst text=selection.getTextContent();const lines=text.split('\\n');const formattedLines=lines.map(line=>`â€¢ ${line}`);selection.insertText(formattedLines.join('\\n'));}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('bold'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Bold (Ctrl+B)\",children:/*#__PURE__*/_jsx(Bold,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('italic'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Italic (Ctrl+I)\",children:/*#__PURE__*/_jsx(Italic,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('underline'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Underline (Ctrl+U)\",children:/*#__PURE__*/_jsx(Underline,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(1),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 1 (# )\",children:/*#__PURE__*/_jsx(Heading1,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(2),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 2 (## )\",children:/*#__PURE__*/_jsx(Heading2,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(3),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 3 (### )\",children:/*#__PURE__*/_jsx(Heading3,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('left'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Left\",children:/*#__PURE__*/_jsx(AlignLeft,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('center'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Center\",children:/*#__PURE__*/_jsx(AlignCenter,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('right'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Right\",children:/*#__PURE__*/_jsx(AlignRight,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleList,className:\"p-2 hover:bg-gray-200 rounded\",title:\"Bullet List\",children:/*#__PURE__*/_jsx(List,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:insertLink,className:\"p-2 hover:bg-gray-200 rounded\",title:\"Insert Link\",children:/*#__PURE__*/_jsx(Link,{className:\"w-4 h-4\"})})]});}// Smart URL detection plugin\nfunction SmartURLDetectionPlugin(){const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref4=>{let{editorState,dirtyElements}=_ref4;if(dirtyElements.size===0)return;editorState.read(()=>{const selection=$getSelection();if(!$isRangeSelection(selection))return;const text=selection.getTextContent();// URL regex pattern - matches http/https URLs and www. URLs\nconst urlRegex=/((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;const matches=text.match(urlRegex);if(matches&&matches.length>0){// Check if we have unformatted URLs\nconst hasUnformattedUrls=matches.some(url=>{// Check if the URL is not already in markdown link format\nreturn!text.includes(`[${url}]`)&&!text.includes(`[${url.split('/').pop()}]`);});if(hasUnformattedUrls){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){// Get the current text again\nconst currentText=newSelection.getTextContent();// Replace URLs with markdown-style links\nlet formattedText=currentText;matches.forEach(url=>{// Only format if it's not already formatted\nif(!formattedText.includes(`[${url}]`)){// Prepend https:// if it's a www. URL\nconst fullUrl=url.startsWith('www.')?`https://${url}`:url;// Create a shorter display text for the link\nconst displayText=url.length>50?url.substring(0,47)+'...':url;formattedText=formattedText.replace(url,`[${displayText}](${fullUrl})`);}});if(formattedText!==currentText){// Replace the entire selection with formatted text\nnewSelection.insertText(formattedText);}}});}}});});},[editor]);return null;}// Error boundary component\nfunction ErrorBoundary(_ref5){let{children}=_ref5;return/*#__PURE__*/_jsx(\"div\",{children:children});}const RichTextEditor=_ref6=>{let{value,onChange,placeholder=\"Start writing...\",className=\"\"}=_ref6;const editorRef=useRef(null);const fileInputRef=useRef(null);// Handle image file selection\nconst handleImageChange=async event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){await uploadAndInsertImage(file);}// Reset file input\nif(fileInputRef.current)fileInputRef.current.value='';};// Handle drag-and-drop\nconst handleDrop=async event=>{event.preventDefault();if(event.dataTransfer.files&&event.dataTransfer.files.length>0){const file=event.dataTransfer.files[0];await uploadAndInsertImage(file);}};// Prevent default drag-over behavior\nconst handleDragOver=event=>{event.preventDefault();};// Upload image to Netlify function and insert <img> tag\nconst uploadAndInsertImage=async file=>{// Convert file to base64\nconst toBase64=file=>new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=()=>resolve(reader.result);reader.onerror=reject;reader.readAsDataURL(file);});try{const base64=await toBase64(file);const response=await fetch(IMAGE_UPLOAD_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({base64,filename:file.name})});const data=await response.json();if(data.url){// Insert <img> tag at cursor position\ninsertImageAtCursor(data.url);}else{alert('Image upload failed: '+(data.error||'Unknown error'));}}catch(err){alert('Image upload failed: '+(err instanceof Error?err.message:String(err)));}};// Insert <img> tag at the current cursor position\nconst insertImageAtCursor=url=>{var _editorRef$current;(_editorRef$current=editorRef.current)===null||_editorRef$current===void 0?void 0:_editorRef$current.focus();// Use Lexical API to insert the image tag as HTML\n// (for simplicity, just insert the HTML string)\n// In a full Lexical implementation, you'd use a custom node\nconst imgHtml=`<img src=\"${url}\" alt=\"Image\" style=\"max-width:100%;margin:12px 0;\" />`;// Insert the image HTML at the cursor\n// We'll use document.execCommand for now for simplicity\ndocument.execCommand('insertHTML',false,imgHtml);};const initialConfig={namespace:'BeedooRichTextEditor',theme:{root:'outline-none min-h-[200px] p-4',text:{bold:'font-bold',italic:'italic',underline:'underline'}},onError:error=>{console.error('Lexical error:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:`border border-gray-300 rounded-md ${className}`,ref:editorRef,onDrop:handleDrop,onDragOver:handleDragOver,children:/*#__PURE__*/_jsxs(LexicalComposer,{initialConfig:initialConfig,children:[/*#__PURE__*/_jsx(ToolbarPlugin,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(RichTextPlugin,{contentEditable:/*#__PURE__*/_jsx(ContentEditable,{className:\"outline-none min-h-[200px] p-4\"}),placeholder:/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 left-4 text-gray-400 pointer-events-none\",children:placeholder}),ErrorBoundary:ErrorBoundary}),/*#__PURE__*/_jsx(CustomOnChangePlugin,{onChange:onChange}),/*#__PURE__*/_jsx(MarkdownShortcutsPlugin,{}),/*#__PURE__*/_jsx(SmartURLDetectionPlugin,{}),/*#__PURE__*/_jsx(HistoryPlugin,{}),/*#__PURE__*/_jsx(AutoFocusPlugin,{})]}),/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:\"image/*\",style:{display:'none'},onChange:handleImageChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\",onClick:()=>{var _fileInputRef$current;return(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},children:\"Upload Image\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-xs text-gray-500\",children:\"Drag & drop or click to upload an image\"})]})]})});};export default RichTextEditor;","map":{"version":3,"names":["React","useEffect","useRef","LexicalComposer","RichTextPlugin","ContentEditable","HistoryPlugin","AutoFocusPlugin","useLexicalComposerContext","$getRoot","$getSelection","$isRangeSelection","Bold","Italic","Underline","List","Link","AlignLeft","AlignCenter","AlignRight","Heading1","Heading2","Heading3","jsx","_jsx","jsxs","_jsxs","IMAGE_UPLOAD_ENDPOINT","CustomOnChangePlugin","_ref","onChange","editor","registerUpdateListener","_ref2","editorState","read","root","text","getTextContent","MarkdownShortcutsPlugin","_ref3","dirtyElements","size","selection","startsWith","endsWith","length","update","newSelection","cleanText","slice","insertText","formatText","ToolbarPlugin","format","formatHeader","level","alignText","alignment","marker","insertLink","url","prompt","linkText","displayText","markdownLink","toggleList","lines","split","formattedLines","map","line","join","className","children","type","onClick","title","SmartURLDetectionPlugin","_ref4","urlRegex","matches","match","hasUnformattedUrls","some","includes","pop","currentText","formattedText","forEach","fullUrl","substring","replace","ErrorBoundary","_ref5","RichTextEditor","_ref6","value","placeholder","editorRef","fileInputRef","handleImageChange","event","_event$target$files","file","target","files","uploadAndInsertImage","current","handleDrop","preventDefault","dataTransfer","handleDragOver","toBase64","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsDataURL","base64","response","fetch","method","headers","body","JSON","stringify","filename","name","data","json","insertImageAtCursor","alert","error","err","Error","message","String","_editorRef$current","focus","imgHtml","document","execCommand","initialConfig","namespace","theme","bold","italic","underline","onError","console","ref","onDrop","onDragOver","contentEditable","accept","style","display","_fileInputRef$current","click"],"sources":["C:/Code/beedoo/src/components/RichTextEditor.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\r\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\r\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\r\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\r\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin';\r\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\r\nimport { $getRoot, $getSelection, $isRangeSelection, $createTextNode, $isElementNode } from 'lexical';\r\nimport { Bold, Italic, Underline, List, Link, AlignLeft, AlignCenter, AlignRight, Heading1, Heading2, Heading3 } from 'lucide-react';\r\n\r\ninterface RichTextEditorProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nconst IMAGE_UPLOAD_ENDPOINT = '/.netlify/functions/upload-image';\r\n\r\n// Custom onChange plugin\r\nfunction CustomOnChangePlugin({ onChange }: { onChange: (value: string) => void }): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState }) => {\r\n      editorState.read(() => {\r\n        const root = $getRoot();\r\n        const text = root.getTextContent();\r\n        onChange(text);\r\n      });\r\n    });\r\n  }, [editor, onChange]);\r\n\r\n  return null;\r\n}\r\n\r\n// Markdown shortcuts plugin\r\nfunction MarkdownShortcutsPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // Handle markdown shortcuts\r\n        if (text.startsWith('**') && text.endsWith('**') && text.length > 4) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2, -2);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('*') && text.endsWith('*') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('italic');\r\n            }\r\n          });\r\n        } else if (text.startsWith('~') && text.endsWith('~') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('underline');\r\n            }\r\n          });\r\n        } else if (text.startsWith('# ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2);\r\n              newSelection.insertText(cleanText);\r\n              // Apply header formatting (simplified - just make it bold and larger)\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('## ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(3);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('### ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(4);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Toolbar component\r\nfunction ToolbarPlugin(): JSX.Element {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  const formatText = (format: 'bold' | 'italic' | 'underline') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        selection.formatText(format);\r\n      }\r\n    });\r\n  };\r\n\r\n  const formatHeader = (level: 1 | 2 | 3) => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just make headers bold\r\n        // In a full implementation, you'd create proper header nodes\r\n        selection.formatText('bold');\r\n      }\r\n    });\r\n  };\r\n\r\n  const alignText = (alignment: 'left' | 'center' | 'right') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just insert alignment markers\r\n        // In a full implementation, you'd set proper CSS alignment\r\n        const marker = alignment === 'left' ? '' : alignment === 'center' ? ' [CENTER] ' : ' [RIGHT] ';\r\n        selection.insertText(marker);\r\n      }\r\n    });\r\n  };\r\n\r\n  const insertLink = () => {\r\n    const url = prompt('Enter URL:');\r\n    if (url) {\r\n      const linkText = prompt('Enter link text (optional):', url);\r\n      const displayText = linkText || url;\r\n      \r\n      editor.update(() => {\r\n        const selection = $getSelection();\r\n        if ($isRangeSelection(selection)) {\r\n          // Create markdown-style link\r\n          const markdownLink = `[${displayText}](${url})`;\r\n          selection.insertText(markdownLink);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // Simple list implementation - just add bullet points\r\n        const text = selection.getTextContent();\r\n        const lines = text.split('\\n');\r\n        const formattedLines = lines.map(line => `â€¢ ${line}`);\r\n        selection.insertText(formattedLines.join('\\n'));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\">\r\n      {/* Text Formatting */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('bold')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bold (Ctrl+B)\"\r\n      >\r\n        <Bold className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('italic')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Italic (Ctrl+I)\"\r\n      >\r\n        <Italic className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('underline')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Underline (Ctrl+U)\"\r\n      >\r\n        <Underline className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Headers */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(1)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 1 (# )\"\r\n      >\r\n        <Heading1 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(2)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 2 (## )\"\r\n      >\r\n        <Heading2 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(3)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 3 (### )\"\r\n      >\r\n        <Heading3 className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Alignment */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('left')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Left\"\r\n      >\r\n        <AlignLeft className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('center')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Center\"\r\n      >\r\n        <AlignCenter className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('right')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Right\"\r\n      >\r\n        <AlignRight className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Lists and Links */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={toggleList}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bullet List\"\r\n      >\r\n        <List className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={insertLink}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Insert Link\"\r\n      >\r\n        <Link className=\"w-4 h-4\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Smart URL detection plugin\r\nfunction SmartURLDetectionPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // URL regex pattern - matches http/https URLs and www. URLs\r\n        const urlRegex = /((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;\r\n        const matches = text.match(urlRegex);\r\n        \r\n        if (matches && matches.length > 0) {\r\n          // Check if we have unformatted URLs\r\n          const hasUnformattedUrls = matches.some(url => {\r\n            // Check if the URL is not already in markdown link format\r\n            return !text.includes(`[${url}]`) && !text.includes(`[${url.split('/').pop()}]`);\r\n          });\r\n\r\n          if (hasUnformattedUrls) {\r\n            editor.update(() => {\r\n              const newSelection = $getSelection();\r\n              if ($isRangeSelection(newSelection)) {\r\n                // Get the current text again\r\n                const currentText = newSelection.getTextContent();\r\n                \r\n                // Replace URLs with markdown-style links\r\n                let formattedText = currentText;\r\n                matches.forEach(url => {\r\n                  // Only format if it's not already formatted\r\n                  if (!formattedText.includes(`[${url}]`)) {\r\n                    // Prepend https:// if it's a www. URL\r\n                    const fullUrl = url.startsWith('www.') ? `https://${url}` : url;\r\n                    // Create a shorter display text for the link\r\n                    const displayText = url.length > 50 ? url.substring(0, 47) + '...' : url;\r\n                    formattedText = formattedText.replace(url, `[${displayText}](${fullUrl})`);\r\n                  }\r\n                });\r\n                \r\n                if (formattedText !== currentText) {\r\n                  // Replace the entire selection with formatted text\r\n                  newSelection.insertText(formattedText);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Error boundary component\r\nfunction ErrorBoundary({ children }: { children: React.ReactNode }): JSX.Element {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({ \r\n  value, \r\n  onChange, \r\n  placeholder = \"Start writing...\",\r\n  className = \"\"\r\n}) => {\r\n  const editorRef = useRef<HTMLDivElement>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Handle image file selection\r\n  const handleImageChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      await uploadAndInsertImage(file);\r\n    }\r\n    // Reset file input\r\n    if (fileInputRef.current) fileInputRef.current.value = '';\r\n  };\r\n\r\n  // Handle drag-and-drop\r\n  const handleDrop = async (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\r\n      const file = event.dataTransfer.files[0];\r\n      await uploadAndInsertImage(file);\r\n    }\r\n  };\r\n\r\n  // Prevent default drag-over behavior\r\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Upload image to Netlify function and insert <img> tag\r\n  const uploadAndInsertImage = async (file: File) => {\r\n    // Convert file to base64\r\n    const toBase64 = (file: File) => new Promise<string>((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(file);\r\n    });\r\n    try {\r\n      const base64 = await toBase64(file);\r\n      const response = await fetch(IMAGE_UPLOAD_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ base64, filename: file.name }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        // Insert <img> tag at cursor position\r\n        insertImageAtCursor(data.url);\r\n      } else {\r\n        alert('Image upload failed: ' + (data.error || 'Unknown error'));\r\n      }\r\n    } catch (err) {\r\n      alert('Image upload failed: ' + (err instanceof Error ? err.message : String(err)));\r\n    }\r\n  };\r\n\r\n  // Insert <img> tag at the current cursor position\r\n  const insertImageAtCursor = (url: string) => {\r\n    editorRef.current?.focus();\r\n    // Use Lexical API to insert the image tag as HTML\r\n    // (for simplicity, just insert the HTML string)\r\n    // In a full Lexical implementation, you'd use a custom node\r\n    const imgHtml = `<img src=\"${url}\" alt=\"Image\" style=\"max-width:100%;margin:12px 0;\" />`;\r\n    // Insert the image HTML at the cursor\r\n    // We'll use document.execCommand for now for simplicity\r\n    document.execCommand('insertHTML', false, imgHtml);\r\n  };\r\n\r\n  const initialConfig = {\r\n    namespace: 'BeedooRichTextEditor',\r\n    theme: {\r\n      root: 'outline-none min-h-[200px] p-4',\r\n      text: {\r\n        bold: 'font-bold',\r\n        italic: 'italic',\r\n        underline: 'underline',\r\n      },\r\n    },\r\n    onError: (error: Error) => {\r\n      console.error('Lexical error:', error);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`border border-gray-300 rounded-md ${className}`}\r\n      ref={editorRef}\r\n      onDrop={handleDrop}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      <LexicalComposer initialConfig={initialConfig}>\r\n        <ToolbarPlugin />\r\n        <div className=\"relative\">\r\n          <RichTextPlugin\r\n            contentEditable={\r\n              <ContentEditable \r\n                className=\"outline-none min-h-[200px] p-4\"\r\n              />\r\n            }\r\n            placeholder={\r\n              <div className=\"absolute top-4 left-4 text-gray-400 pointer-events-none\">\r\n                {placeholder}\r\n              </div>\r\n            }\r\n            ErrorBoundary={ErrorBoundary}\r\n          />\r\n          <CustomOnChangePlugin onChange={onChange} />\r\n          <MarkdownShortcutsPlugin />\r\n          <SmartURLDetectionPlugin />\r\n          <HistoryPlugin />\r\n          <AutoFocusPlugin />\r\n        </div>\r\n        {/* Hidden file input for image uploads */}\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          onChange={handleImageChange}\r\n        />\r\n        {/* Image upload button in toolbar */}\r\n        <div className=\"p-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\"\r\n            onClick={() => fileInputRef.current?.click()}\r\n          >\r\n            Upload Image\r\n          </button>\r\n          <span className=\"ml-2 text-xs text-gray-500\">Drag & drop or click to upload an image</span>\r\n        </div>\r\n      </LexicalComposer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}