{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\beedoo\\\\src\\\\components\\\\TaskList.tsx\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask,\n  onAddSubtask,\n  onAddNextStep,\n  showCompletedTasks\n}) => {\n  if (tasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-8 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"mx-auto h-12 w-12 text-gray-400\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-2 text-sm font-medium text-gray-900\",\n          children: \"No tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: \"Get started by creating a new task.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Filter tasks based on global completed tasks visibility\n  const filteredTasks = showCompletedTasks ? tasks : tasks.filter(task => !task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onUpdateTask: onUpdateTask,\n      onDeleteTask: onDeleteTask,\n      onAddSubtask: onAddSubtask,\n      onAddNextStep: onAddNextStep,\n      level: 0,\n      showCompletedTasks: showCompletedTasks\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","TaskList","tasks","onUpdateTask","onDeleteTask","onAddSubtask","onAddNextStep","showCompletedTasks","length","className","children","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","filteredTasks","filter","task","completed","map","level","id","_c","$RefreshReg$"],"sources":["C:/Code/beedoo/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { Task } from '../types/Task';\nimport TaskItem from './TaskItem';\n\ninterface TaskListProps {\n  tasks: Task[];\n  onUpdateTask: (id: string, updates: Partial<Task>) => void;\n  onDeleteTask: (id: string) => void;\n  onAddSubtask: (parentId: string, subtask: Task) => void;\n  onAddNextStep: (parentId: string, nextStep: Task) => void;\n  showCompletedTasks: boolean;\n}\n\nconst TaskList: React.FC<TaskListProps> = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask,\n  onAddSubtask,\n  onAddNextStep,\n  showCompletedTasks,\n}) => {\n  if (tasks.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n        <div className=\"text-gray-500\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No tasks</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Get started by creating a new task.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Filter tasks based on global completed tasks visibility\n  const filteredTasks = showCompletedTasks \n    ? tasks \n    : tasks.filter(task => !task.completed);\n\n  return (\n    <div className=\"space-y-4\">\n      {filteredTasks.map((task) => (\n        <TaskItem\n          key={task.id}\n          task={task}\n          onUpdateTask={onUpdateTask}\n          onDeleteTask={onDeleteTask}\n          onAddSubtask={onAddSubtask}\n          onAddNextStep={onAddNextStep}\n          level={0}\n          showCompletedTasks={showCompletedTasks}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWlC,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,KAAK;EACLC,YAAY;EACZC,YAAY;EACZC,YAAY;EACZC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ,IAAIL,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;IACtB,oBACER,OAAA;MAAKS,SAAS,EAAC,4CAA4C;MAAAC,QAAA,eACzDV,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BV,OAAA;UACES,SAAS,EAAC,iCAAiC;UAC3CE,IAAI,EAAC,MAAM;UACXC,OAAO,EAAC,WAAW;UACnBC,MAAM,EAAC,cAAc;UACrB,eAAY,MAAM;UAAAH,QAAA,eAElBV,OAAA;YACEc,aAAa,EAAC,OAAO;YACrBC,cAAc,EAAC,OAAO;YACtBC,WAAW,EAAE,CAAE;YACfC,CAAC,EAAC;UAAgI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrB,OAAA;UAAIS,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpErB,OAAA;UAAGS,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAE1C;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,MAAMC,aAAa,GAAGf,kBAAkB,GACpCL,KAAK,GACLA,KAAK,CAACqB,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;EAEzC,oBACEzB,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBY,aAAa,CAACI,GAAG,CAAEF,IAAI,iBACtBxB,OAAA,CAACF,QAAQ;MAEP0B,IAAI,EAAEA,IAAK;MACXrB,YAAY,EAAEA,YAAa;MAC3BC,YAAY,EAAEA,YAAa;MAC3BC,YAAY,EAAEA,YAAa;MAC3BC,aAAa,EAAEA,aAAc;MAC7BqB,KAAK,EAAE,CAAE;MACTpB,kBAAkB,EAAEA;IAAmB,GAPlCiB,IAAI,CAACI,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACQ,EAAA,GAxDI5B,QAAiC;AA0DvC,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}