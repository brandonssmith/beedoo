{"ast":null,"code":"export const generateId=()=>{return Date.now().toString(36)+Math.random().toString(36).substr(2);};export const parseTimeInput=timeInput=>{const hours=parseInt(timeInput.hours)||0;const minutes=parseInt(timeInput.minutes)||0;return hours*60+minutes;};export const formatTime=minutes=>{const hours=Math.floor(minutes/60);const mins=minutes%60;if(hours===0){return`${mins}m`;}else if(mins===0){return`${hours}h`;}else{return`${hours}h ${mins}m`;}};export const createTask=(formData,type,parentId)=>{const now=new Date();return{id:generateId(),title:formData.title,description:formData.description,estimatedTime:formData.estimatedTime?parseTimeInput({hours:'0',minutes:formData.estimatedTime}):undefined,actualTime:undefined,completed:false,priority:formData.priority,subtasks:[],nextSteps:[],createdAt:now,updatedAt:now,parentId,type};};export const findTaskById=(tasks,id)=>{for(const task of tasks){if(task.id===id)return task;const foundInSubtasks=findTaskById(task.subtasks,id);if(foundInSubtasks)return foundInSubtasks;const foundInNextSteps=findTaskById(task.nextSteps,id);if(foundInNextSteps)return foundInNextSteps;}return null;};export const updateTask=(tasks,id,updates)=>{return tasks.map(task=>{if(task.id===id){return{...task,...updates,updatedAt:new Date()};}return{...task,subtasks:updateTask(task.subtasks,id,updates),nextSteps:updateTask(task.nextSteps,id,updates)};});};export const deleteTask=(tasks,id)=>{return tasks.filter(task=>{if(task.id===id)return false;task.subtasks=deleteTask(task.subtasks,id);task.nextSteps=deleteTask(task.nextSteps,id);return true;});};export const addSubtask=(tasks,parentId,subtask)=>{return tasks.map(task=>{if(task.id===parentId){return{...task,subtasks:[...task.subtasks,subtask],updatedAt:new Date()};}return{...task,subtasks:addSubtask(task.subtasks,parentId,subtask),nextSteps:addSubtask(task.nextSteps,parentId,subtask)};});};export const addNextStep=(tasks,parentId,nextStep)=>{return tasks.map(task=>{if(task.id===parentId){return{...task,nextSteps:[...task.nextSteps,nextStep],updatedAt:new Date()};}return{...task,subtasks:addNextStep(task.subtasks,parentId,nextStep),nextSteps:addNextStep(task.nextSteps,parentId,nextStep)};});};export const calculateTaskStats=tasks=>{let totalTasks=0;let completedTasks=0;let totalEstimatedTime=0;let totalActualTime=0;const processTasks=taskList=>{taskList.forEach(task=>{totalTasks++;if(task.completed)completedTasks++;if(task.estimatedTime)totalEstimatedTime+=task.estimatedTime;if(task.actualTime)totalActualTime+=task.actualTime;processTasks(task.subtasks);processTasks(task.nextSteps);});};processTasks(tasks);return{totalTasks,completedTasks,totalEstimatedTime,totalActualTime};};export const saveTasksToLocalStorage=tasks=>{localStorage.setItem('beedoo-tasks',JSON.stringify(tasks));};export const loadTasksFromLocalStorage=()=>{const stored=localStorage.getItem('beedoo-tasks');if(!stored)return[];try{const parsed=JSON.parse(stored);// Convert date strings back to Date objects\nconst convertDates=taskList=>{return taskList.map(task=>({...task,createdAt:new Date(task.createdAt),updatedAt:new Date(task.updatedAt),subtasks:convertDates(task.subtasks),nextSteps:convertDates(task.nextSteps)}));};return convertDates(parsed);}catch(error){console.error('Error loading tasks from localStorage:',error);return[];}};","map":{"version":3,"names":["generateId","Date","now","toString","Math","random","substr","parseTimeInput","timeInput","hours","parseInt","minutes","formatTime","floor","mins","createTask","formData","type","parentId","id","title","description","estimatedTime","undefined","actualTime","completed","priority","subtasks","nextSteps","createdAt","updatedAt","findTaskById","tasks","task","foundInSubtasks","foundInNextSteps","updateTask","updates","map","deleteTask","filter","addSubtask","subtask","addNextStep","nextStep","calculateTaskStats","totalTasks","completedTasks","totalEstimatedTime","totalActualTime","processTasks","taskList","forEach","saveTasksToLocalStorage","localStorage","setItem","JSON","stringify","loadTasksFromLocalStorage","stored","getItem","parsed","parse","convertDates","error","console"],"sources":["C:/Code/beedoo/src/utils/taskUtils.ts"],"sourcesContent":["import { Task, TaskFormData, TimeInput, TaskStatistics } from '../types/Task';\r\n\r\nexport const generateId = (): string => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n\r\nexport const parseTimeInput = (timeInput: TimeInput): number => {\r\n  const hours = parseInt(timeInput.hours) || 0;\r\n  const minutes = parseInt(timeInput.minutes) || 0;\r\n  return hours * 60 + minutes;\r\n};\r\n\r\nexport const formatTime = (minutes: number): string => {\r\n  const hours = Math.floor(minutes / 60);\r\n  const mins = minutes % 60;\r\n  \r\n  if (hours === 0) {\r\n    return `${mins}m`;\r\n  } else if (mins === 0) {\r\n    return `${hours}h`;\r\n  } else {\r\n    return `${hours}h ${mins}m`;\r\n  }\r\n};\r\n\r\nexport const createTask = (formData: TaskFormData, type: Task['type'], parentId?: string): Task => {\r\n  const now = new Date();\r\n  return {\r\n    id: generateId(),\r\n    title: formData.title,\r\n    description: formData.description,\r\n    estimatedTime: formData.estimatedTime ? parseTimeInput({ hours: '0', minutes: formData.estimatedTime }) : undefined,\r\n    actualTime: undefined,\r\n    completed: false,\r\n    priority: formData.priority,\r\n    subtasks: [],\r\n    nextSteps: [],\r\n    createdAt: now,\r\n    updatedAt: now,\r\n    parentId,\r\n    type,\r\n  };\r\n};\r\n\r\nexport const findTaskById = (tasks: Task[], id: string): Task | null => {\r\n  for (const task of tasks) {\r\n    if (task.id === id) return task;\r\n    \r\n    const foundInSubtasks = findTaskById(task.subtasks, id);\r\n    if (foundInSubtasks) return foundInSubtasks;\r\n    \r\n    const foundInNextSteps = findTaskById(task.nextSteps, id);\r\n    if (foundInNextSteps) return foundInNextSteps;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const updateTask = (tasks: Task[], id: string, updates: Partial<Task>): Task[] => {\r\n  return tasks.map(task => {\r\n    if (task.id === id) {\r\n      return { ...task, ...updates, updatedAt: new Date() };\r\n    }\r\n    \r\n    return {\r\n      ...task,\r\n      subtasks: updateTask(task.subtasks, id, updates),\r\n      nextSteps: updateTask(task.nextSteps, id, updates),\r\n    };\r\n  });\r\n};\r\n\r\nexport const deleteTask = (tasks: Task[], id: string): Task[] => {\r\n  return tasks.filter(task => {\r\n    if (task.id === id) return false;\r\n    \r\n    task.subtasks = deleteTask(task.subtasks, id);\r\n    task.nextSteps = deleteTask(task.nextSteps, id);\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const addSubtask = (tasks: Task[], parentId: string, subtask: Task): Task[] => {\r\n  return tasks.map(task => {\r\n    if (task.id === parentId) {\r\n      return {\r\n        ...task,\r\n        subtasks: [...task.subtasks, subtask],\r\n        updatedAt: new Date(),\r\n      };\r\n    }\r\n    \r\n    return {\r\n      ...task,\r\n      subtasks: addSubtask(task.subtasks, parentId, subtask),\r\n      nextSteps: addSubtask(task.nextSteps, parentId, subtask),\r\n    };\r\n  });\r\n};\r\n\r\nexport const addNextStep = (tasks: Task[], parentId: string, nextStep: Task): Task[] => {\r\n  return tasks.map(task => {\r\n    if (task.id === parentId) {\r\n      return {\r\n        ...task,\r\n        nextSteps: [...task.nextSteps, nextStep],\r\n        updatedAt: new Date(),\r\n      };\r\n    }\r\n    \r\n    return {\r\n      ...task,\r\n      subtasks: addNextStep(task.subtasks, parentId, nextStep),\r\n      nextSteps: addNextStep(task.nextSteps, parentId, nextStep),\r\n    };\r\n  });\r\n};\r\n\r\nexport const calculateTaskStats = (tasks: Task[]): TaskStatistics => {\r\n  let totalTasks = 0;\r\n  let completedTasks = 0;\r\n  let totalEstimatedTime = 0;\r\n  let totalActualTime = 0;\r\n\r\n  const processTasks = (taskList: Task[]) => {\r\n    taskList.forEach(task => {\r\n      totalTasks++;\r\n      if (task.completed) completedTasks++;\r\n      if (task.estimatedTime) totalEstimatedTime += task.estimatedTime;\r\n      if (task.actualTime) totalActualTime += task.actualTime;\r\n      \r\n      processTasks(task.subtasks);\r\n      processTasks(task.nextSteps);\r\n    });\r\n  };\r\n\r\n  processTasks(tasks);\r\n  \r\n  return {\r\n    totalTasks,\r\n    completedTasks,\r\n    totalEstimatedTime,\r\n    totalActualTime,\r\n  };\r\n};\r\n\r\nexport const saveTasksToLocalStorage = (tasks: Task[]): void => {\r\n  localStorage.setItem('beedoo-tasks', JSON.stringify(tasks));\r\n};\r\n\r\nexport const loadTasksFromLocalStorage = (): Task[] => {\r\n  const stored = localStorage.getItem('beedoo-tasks');\r\n  if (!stored) return [];\r\n  \r\n  try {\r\n    const parsed = JSON.parse(stored);\r\n    // Convert date strings back to Date objects\r\n    const convertDates = (taskList: any[]): Task[] => {\r\n      return taskList.map(task => ({\r\n        ...task,\r\n        createdAt: new Date(task.createdAt),\r\n        updatedAt: new Date(task.updatedAt),\r\n        subtasks: convertDates(task.subtasks),\r\n        nextSteps: convertDates(task.nextSteps),\r\n      }));\r\n    };\r\n    return convertDates(parsed);\r\n  } catch (error) {\r\n    console.error('Error loading tasks from localStorage:', error);\r\n    return [];\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}