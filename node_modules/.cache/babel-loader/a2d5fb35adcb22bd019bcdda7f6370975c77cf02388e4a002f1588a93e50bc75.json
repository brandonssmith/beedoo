{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $isTextNode as e, $isTokenOrSegmented as t, $getCharacterOffsets as n, $isElementNode as o, $isRootNode as l, $getNodeByKey as r, $getPreviousSelection as s, $createTextNode as i, $isRangeSelection as c, $getSelection as f, $caretRangeFromSelection as u, $createRangeSelection as g, INTERNAL_$isBlock as a, $setSelection as d, $isRootOrShadowRoot as p, $hasAncestor as h, $isLeafNode as y, $caretFromPoint as m, $isExtendableTextPointCaret as S, $extendCaretToRange as x, $isChildCaret as T, $isDecoratorNode as w, $getEditor as v } from \"lexical\";\nexport { $cloneWithProperties, $selectAll } from \"lexical\";\nfunction N(e) {\n  const n = new URL(\"https://lexical.dev/docs/error\"),\n    o = new URLSearchParams();\n  o.append(\"code\", e);\n  for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    t[_key - 1] = arguments[_key];\n  }\n  for (const e of t) o.append(\"v\", e);\n  throw n.search = o.toString(), Error(`Minified Lexical error #${e}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);\n}\nconst C = new Map();\nfunction P(e) {\n  let t = e;\n  for (; null != t;) {\n    if (t.nodeType === Node.TEXT_NODE) return t;\n    t = t.firstChild;\n  }\n  return null;\n}\nfunction K(e) {\n  const t = e.parentNode;\n  if (null == t) throw new Error(\"Should never happen\");\n  return [t, Array.from(t.childNodes).indexOf(e)];\n}\nfunction E(t, n, o, l, r) {\n  const s = n.getKey(),\n    i = l.getKey(),\n    c = document.createRange();\n  let f = t.getElementByKey(s),\n    u = t.getElementByKey(i),\n    g = o,\n    a = r;\n  if (e(n) && (f = P(f)), e(l) && (u = P(u)), void 0 === n || void 0 === l || null === f || null === u) return null;\n  \"BR\" === f.nodeName && ([f, g] = K(f)), \"BR\" === u.nodeName && ([u, a] = K(u));\n  const d = f.firstChild;\n  f === u && null != d && \"BR\" === d.nodeName && 0 === g && 0 === a && (a = 1);\n  try {\n    c.setStart(f, g), c.setEnd(u, a);\n  } catch (e) {\n    return null;\n  }\n  return !c.collapsed || g === a && s === i || (c.setStart(u, a), c.setEnd(f, g)), c;\n}\nfunction k(e, t) {\n  const n = e.getRootElement();\n  if (null === n) return [];\n  const o = n.getBoundingClientRect(),\n    l = getComputedStyle(n),\n    r = parseFloat(l.paddingLeft) + parseFloat(l.paddingRight),\n    s = Array.from(t.getClientRects());\n  let i,\n    c = s.length;\n  s.sort((e, t) => {\n    const n = e.top - t.top;\n    return Math.abs(n) <= 3 ? e.left - t.left : n;\n  });\n  for (let e = 0; e < c; e++) {\n    const t = s[e],\n      n = i && i.top <= t.top && i.top + i.height > t.top && i.left + i.width > t.left,\n      l = t.width + r === o.width;\n    n || l ? (s.splice(e--, 1), c--) : i = t;\n  }\n  return s;\n}\nfunction I(e) {\n  const t = {};\n  if (!e) return t;\n  const n = e.split(\";\");\n  for (const e of n) if (\"\" !== e) {\n    const [n, o] = e.split(/:([^]+)/);\n    n && o && (t[n.trim()] = o.trim());\n  }\n  return t;\n}\nfunction B(e) {\n  let t = C.get(e);\n  return void 0 === t && (t = I(e), C.set(e, t)), t;\n}\nfunction F(e) {\n  let t = \"\";\n  for (const n in e) n && (t += `${n}: ${e[n]};`);\n  return t;\n}\nfunction b(e, o) {\n  const l = e.getStartEndPoints();\n  if (o.isSelected(e) && !t(o) && null !== l) {\n    const [t, r] = l,\n      s = e.isBackward(),\n      i = t.getNode(),\n      c = r.getNode(),\n      f = o.is(i),\n      u = o.is(c);\n    if (f || u) {\n      const [t, l] = n(e),\n        r = i.is(c),\n        f = o.is(s ? c : i),\n        u = o.is(s ? i : c);\n      let g,\n        a = 0;\n      if (r) a = t > l ? l : t, g = t > l ? t : l;else if (f) {\n        a = s ? l : t, g = void 0;\n      } else if (u) {\n        a = 0, g = s ? t : l;\n      }\n      o.__text = o.__text.slice(a, g);\n    }\n  }\n  return o;\n}\nfunction O(e) {\n  if (\"text\" === e.type) return e.offset === e.getNode().getTextContentSize();\n  const t = e.getNode();\n  return o(t) || N(177), e.offset === t.getChildrenSize();\n}\nfunction R(t, n, f) {\n  let u = n.getNode(),\n    g = f;\n  if (o(u)) {\n    const e = u.getDescendantByIndex(n.offset);\n    null !== e && (u = e);\n  }\n  for (; g > 0 && null !== u;) {\n    if (o(u)) {\n      const e = u.getLastDescendant();\n      null !== e && (u = e);\n    }\n    let f = u.getPreviousSibling(),\n      a = 0;\n    if (null === f) {\n      let e = u.getParentOrThrow(),\n        t = e.getPreviousSibling();\n      for (; null === t;) {\n        if (e = e.getParent(), null === e) {\n          f = null;\n          break;\n        }\n        t = e.getPreviousSibling();\n      }\n      null !== e && (a = e.isInline() ? 0 : 2, f = t);\n    }\n    let d = u.getTextContent();\n    \"\" === d && o(u) && !u.isInline() && (d = \"\\n\\n\");\n    const p = d.length;\n    if (!e(u) || g >= p) {\n      const e = u.getParent();\n      u.remove(), null == e || 0 !== e.getChildrenSize() || l(e) || e.remove(), g -= p + a, u = f;\n    } else {\n      const o = u.getKey(),\n        l = t.getEditorState().read(() => {\n          const t = r(o);\n          return e(t) && t.isSimpleText() ? t.getTextContent() : null;\n        }),\n        f = p - g,\n        a = d.slice(0, f);\n      if (null !== l && l !== d) {\n        const e = s();\n        let t = u;\n        if (u.isSimpleText()) u.setTextContent(l);else {\n          const e = i(l);\n          u.replace(e), t = e;\n        }\n        if (c(e) && e.isCollapsed()) {\n          const n = e.anchor.offset;\n          t.select(n, n);\n        }\n      } else if (u.isSimpleText()) {\n        const e = n.key === o;\n        let t = n.offset;\n        t < g && (t = p);\n        const l = e ? t - g : 0,\n          r = e ? t : f;\n        if (e && 0 === l) {\n          const [e] = u.splitText(l, r);\n          e.remove();\n        } else {\n          const [, e] = u.splitText(l, r);\n          e.remove();\n        }\n      } else {\n        const e = i(a);\n        u.replace(e);\n      }\n      g = 0;\n    }\n  }\n}\nfunction z(e) {\n  const t = e.getStyle(),\n    n = I(t);\n  C.set(t, n);\n}\nfunction A(t, n) {\n  (c(t) ? t.isCollapsed() : e(t) || o(t)) || N(280);\n  const l = B(c(t) ? t.style : e(t) ? t.getStyle() : t.getTextStyle()),\n    r = Object.entries(n).reduce((e, _ref) => {\n      let [n, o] = _ref;\n      return \"function\" == typeof o ? e[n] = o(l[n], t) : null === o ? delete e[n] : e[n] = o, e;\n    }, {\n      ...l\n    }),\n    s = F(r);\n  c(t) || e(t) ? t.setStyle(s) : t.setTextStyle(s), C.set(s, r);\n}\nfunction M(e, t) {\n  if (c(e) && e.isCollapsed()) {\n    A(e, t);\n    const n = e.anchor.getNode();\n    o(n) && n.isEmpty() && A(n, t);\n  }\n  L(e => {\n    A(e, t);\n  });\n}\nfunction L(n) {\n  const o = f();\n  if (!o) return;\n  const l = new Map();\n  if (c(o)) for (const e of u(o).getTextSlices()) e && l.set(e.caret.origin.getKey(), e.getSliceIndices());\n  const r = o.getNodes();\n  for (const o of r) {\n    if (!e(o) || !o.canHaveFormat()) continue;\n    const [r, i] = (s = o, l.get(s.getKey()) || [0, s.getTextContentSize()]);\n    if (i !== r) if (t(o) || 0 === r && i === o.getTextContentSize()) n(o);else {\n      n(o.splitText(r, i)[0 === r ? 0 : 1]);\n    }\n  }\n  var s;\n  c(o) && \"text\" === o.anchor.type && \"text\" === o.focus.type && o.anchor.key === o.focus.key && $(o);\n}\nfunction $(e) {\n  if (e.isBackward()) {\n    const {\n        anchor: t,\n        focus: n\n      } = e,\n      {\n        key: o,\n        offset: l,\n        type: r\n      } = t;\n    t.set(n.key, n.offset, n.type), n.set(o, l, r);\n  }\n}\nfunction D(e, t) {\n  const n = e.getFormatType(),\n    o = e.getIndent();\n  n !== t.getFormatType() && t.setFormat(n), o !== t.getIndent() && t.setIndent(o);\n}\nfunction _(e, t) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : D;\n  if (null === e) return;\n  const l = e.getStartEndPoints(),\n    r = new Map();\n  let s = null;\n  if (l) {\n    const [e, t] = l;\n    s = g(), s.anchor.set(e.key, e.offset, e.type), s.focus.set(t.key, t.offset, t.type);\n    const n = Z(e.getNode(), a),\n      i = Z(t.getNode(), a);\n    o(n) && r.set(n.getKey(), n), o(i) && r.set(i.getKey(), i);\n  }\n  for (const t of e.getNodes()) if (o(t) && a(t)) r.set(t.getKey(), t);else if (null === l) {\n    const e = Z(t, a);\n    o(e) && r.set(e.getKey(), e);\n  }\n  for (const [e, o] of r) {\n    const l = t();\n    n(o, l), o.replace(l, !0), s && (e === s.anchor.key && s.anchor.set(l.getKey(), s.anchor.offset, s.anchor.type), e === s.focus.key && s.focus.set(l.getKey(), s.focus.offset, s.focus.type));\n  }\n  s && e.is(f()) && d(s);\n}\nfunction U(e) {\n  return e.getNode().isAttached();\n}\nfunction j(e) {\n  let t = e;\n  for (; null !== t && !p(t);) {\n    const e = t.getLatest(),\n      n = t.getParent();\n    0 === e.getChildrenSize() && t.remove(!0), t = n;\n  }\n}\nfunction H(e, t) {\n  let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const o = e.getStartEndPoints(),\n    l = o ? o[0] : null,\n    r = e.getNodes(),\n    s = r.length;\n  if (null !== l && (0 === s || 1 === s && \"element\" === l.type && 0 === l.getNode().getChildrenSize())) {\n    const e = \"text\" === l.type ? l.getNode().getParentOrThrow() : l.getNode(),\n      o = e.getChildren();\n    let r = t();\n    return r.setFormat(e.getFormatType()), r.setIndent(e.getIndent()), o.forEach(e => r.append(e)), n && (r = n.append(r)), void e.replace(r);\n  }\n  let i = null,\n    c = [];\n  for (let o = 0; o < s; o++) {\n    const l = r[o];\n    p(l) ? (V(e, c, c.length, t, n), c = [], i = l) : null === i || null !== i && h(l, i) ? c.push(l) : (V(e, c, c.length, t, n), c = [l]);\n  }\n  V(e, c, c.length, t, n);\n}\nfunction V(e, t, n, l) {\n  let r = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  if (0 === t.length) return;\n  const i = t[0],\n    f = new Map(),\n    u = [];\n  let g = o(i) ? i : i.getParentOrThrow();\n  g.isInline() && (g = g.getParentOrThrow());\n  let a = !1;\n  for (; null !== g;) {\n    const e = g.getPreviousSibling();\n    if (null !== e) {\n      g = e, a = !0;\n      break;\n    }\n    if (g = g.getParentOrThrow(), p(g)) break;\n  }\n  const h = new Set();\n  for (let e = 0; e < n; e++) {\n    const n = t[e];\n    o(n) && 0 === n.getChildrenSize() && h.add(n.getKey());\n  }\n  const m = new Set();\n  for (let e = 0; e < n; e++) {\n    const n = t[e];\n    let r = n.getParent();\n    if (null !== r && r.isInline() && (r = r.getParent()), null !== r && y(n) && !m.has(n.getKey())) {\n      const e = r.getKey();\n      if (void 0 === f.get(e)) {\n        const t = l();\n        t.setFormat(r.getFormatType()), t.setIndent(r.getIndent()), u.push(t), f.set(e, t), r.getChildren().forEach(e => {\n          t.append(e), m.add(e.getKey()), o(e) && e.getChildrenKeys().forEach(e => m.add(e));\n        }), j(r);\n      }\n    } else if (h.has(n.getKey())) {\n      o(n) || N(179);\n      const e = l();\n      e.setFormat(n.getFormatType()), e.setIndent(n.getIndent()), u.push(e), n.remove(!0);\n    }\n  }\n  if (null !== r) for (let e = 0; e < u.length; e++) {\n    const t = u[e];\n    r.append(t);\n  }\n  let S = null;\n  if (p(g)) {\n    if (a) {\n      if (null !== r) g.insertAfter(r);else for (let e = u.length - 1; e >= 0; e--) {\n        const t = u[e];\n        g.insertAfter(t);\n      }\n    } else {\n      const e = g.getFirstChild();\n      if (o(e) && (g = e), null === e) {\n        if (r) g.append(r);else for (let e = 0; e < u.length; e++) {\n          const t = u[e];\n          g.append(t), S = t;\n        }\n      } else if (null !== r) e.insertBefore(r);else for (let t = 0; t < u.length; t++) {\n        const n = u[t];\n        e.insertBefore(n), S = n;\n      }\n    }\n  } else if (r) g.insertAfter(r);else for (let e = u.length - 1; e >= 0; e--) {\n    const t = u[e];\n    g.insertAfter(t), S = t;\n  }\n  const x = s();\n  c(x) && U(x.anchor) && U(x.focus) ? d(x.clone()) : null !== S ? S.selectEnd() : e.dirty = !0;\n}\nfunction W(e) {\n  const t = e.anchor.getNode(),\n    n = l(t) ? t : t.getParentOrThrow(),\n    o = v().getElementByKey(n.getKey());\n  if (null === o) return !1;\n  const r = o.ownerDocument.defaultView;\n  if (null === r) return !1;\n  return \"vertical-rl\" === r.getComputedStyle(o).writingMode;\n}\nfunction X(e, t) {\n  const n = W(e) ? !t : t,\n    l = m(e.focus, n ? \"previous\" : \"next\");\n  if (S(l)) return !1;\n  for (const e of x(l)) {\n    if (T(e)) return !e.origin.isInline();\n    if (!o(e.origin)) {\n      if (w(e.origin)) return !0;\n      break;\n    }\n  }\n  return !1;\n}\nfunction q(e, t, n, o) {\n  e.modify(t ? \"extend\" : \"move\", n, o);\n}\nfunction G(e) {\n  const t = e.anchor.getNode();\n  return \"rtl\" === (l(t) ? t : t.getParentOrThrow()).getDirection();\n}\nfunction J(e, t, n) {\n  const o = G(e);\n  let l;\n  l = W(e) || o ? !n : n, q(e, t, l, \"character\");\n}\nfunction Q(e, t, n) {\n  const o = B(e.getStyle());\n  return null !== o && o[t] || n;\n}\nfunction Y(t, n) {\n  let o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let l = null;\n  const r = t.getNodes(),\n    s = t.anchor,\n    i = t.focus,\n    f = t.isBackward(),\n    u = f ? i.offset : s.offset,\n    g = f ? i.getNode() : s.getNode();\n  if (c(t) && t.isCollapsed() && \"\" !== t.style) {\n    const e = B(t.style);\n    if (null !== e && n in e) return e[n];\n  }\n  for (let t = 0; t < r.length; t++) {\n    const s = r[t];\n    if ((0 === t || 0 !== u || !s.is(g)) && e(s)) {\n      const e = Q(s, n, o);\n      if (null === l) l = e;else if (l !== e) {\n        l = \"\";\n        break;\n      }\n    }\n  }\n  return null === l ? o : l;\n}\nfunction Z(e, t) {\n  let n = e;\n  for (; null !== n && null !== n.getParent() && !t(n);) n = n.getParentOrThrow();\n  return t(n) ? n : null;\n}\nconst ee = R;\nexport { z as $addNodeStyle, D as $copyBlockFormatIndent, $ as $ensureForwardRangeSelection, L as $forEachSelectedTextNode, Y as $getSelectionStyleValueForProperty, O as $isAtNodeEnd, G as $isParentElementRTL, q as $moveCaretSelection, J as $moveCharacter, M as $patchStyleText, _ as $setBlocksType, X as $shouldOverrideDefaultCharacterSelection, b as $sliceSelectedTextNodeContent, R as $trimTextContentFromAnchor, H as $wrapNodes, E as createDOMRange, k as createRectsFromDOMRange, F as getCSSFromStyleObject, B as getStyleObjectFromCSS, ee as trimTextContentFromAnchor };","map":{"version":3,"names":["$isTextNode","e","$isTokenOrSegmented","t","$getCharacterOffsets","n","$isElementNode","o","$isRootNode","l","$getNodeByKey","r","$getPreviousSelection","s","$createTextNode","i","$isRangeSelection","c","$getSelection","f","$caretRangeFromSelection","u","$createRangeSelection","g","INTERNAL_$isBlock","a","$setSelection","d","$isRootOrShadowRoot","p","$hasAncestor","h","$isLeafNode","y","$caretFromPoint","m","$isExtendableTextPointCaret","S","$extendCaretToRange","x","$isChildCaret","T","$isDecoratorNode","w","$getEditor","v","$cloneWithProperties","$selectAll","N","URL","URLSearchParams","append","_len","arguments","length","Array","_key","search","toString","Error","C","Map","P","nodeType","Node","TEXT_NODE","firstChild","K","parentNode","from","childNodes","indexOf","E","getKey","document","createRange","getElementByKey","nodeName","setStart","setEnd","collapsed","k","getRootElement","getBoundingClientRect","getComputedStyle","parseFloat","paddingLeft","paddingRight","getClientRects","sort","top","Math","abs","left","height","width","splice","I","split","trim","B","get","set","F","b","getStartEndPoints","isSelected","isBackward","getNode","is","__text","slice","O","type","offset","getTextContentSize","getChildrenSize","R","getDescendantByIndex","getLastDescendant","getPreviousSibling","getParentOrThrow","getParent","isInline","getTextContent","remove","getEditorState","read","isSimpleText","setTextContent","replace","isCollapsed","anchor","select","key","splitText","z","getStyle","A","style","getTextStyle","Object","entries","reduce","_ref","setStyle","setTextStyle","M","isEmpty","L","getTextSlices","caret","origin","getSliceIndices","getNodes","canHaveFormat","focus","$","D","getFormatType","getIndent","setFormat","setIndent","_","undefined","Z","U","isAttached","j","getLatest","H","getChildren","forEach","V","push","Set","add","has","getChildrenKeys","insertAfter","getFirstChild","insertBefore","clone","selectEnd","dirty","W","ownerDocument","defaultView","writingMode","X","q","modify","G","getDirection","J","Q","Y","ee","$addNodeStyle","$copyBlockFormatIndent","$ensureForwardRangeSelection","$forEachSelectedTextNode","$getSelectionStyleValueForProperty","$isAtNodeEnd","$isParentElementRTL","$moveCaretSelection","$moveCharacter","$patchStyleText","$setBlocksType","$shouldOverrideDefaultCharacterSelection","$sliceSelectedTextNodeContent","$trimTextContentFromAnchor","$wrapNodes","createDOMRange","createRectsFromDOMRange","getCSSFromStyleObject","getStyleObjectFromCSS","trimTextContentFromAnchor"],"sources":["C:/Code/beedoo/node_modules/@lexical/selection/LexicalSelection.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{$isTextNode as e,$isTokenOrSegmented as t,$getCharacterOffsets as n,$isElementNode as o,$isRootNode as l,$getNodeByKey as r,$getPreviousSelection as s,$createTextNode as i,$isRangeSelection as c,$getSelection as f,$caretRangeFromSelection as u,$createRangeSelection as g,INTERNAL_$isBlock as a,$setSelection as d,$isRootOrShadowRoot as p,$hasAncestor as h,$isLeafNode as y,$caretFromPoint as m,$isExtendableTextPointCaret as S,$extendCaretToRange as x,$isChildCaret as T,$isDecoratorNode as w,$getEditor as v}from\"lexical\";export{$cloneWithProperties,$selectAll}from\"lexical\";function N(e,...t){const n=new URL(\"https://lexical.dev/docs/error\"),o=new URLSearchParams;o.append(\"code\",e);for(const e of t)o.append(\"v\",e);throw n.search=o.toString(),Error(`Minified Lexical error #${e}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}const C=new Map;function P(e){let t=e;for(;null!=t;){if(t.nodeType===Node.TEXT_NODE)return t;t=t.firstChild}return null}function K(e){const t=e.parentNode;if(null==t)throw new Error(\"Should never happen\");return[t,Array.from(t.childNodes).indexOf(e)]}function E(t,n,o,l,r){const s=n.getKey(),i=l.getKey(),c=document.createRange();let f=t.getElementByKey(s),u=t.getElementByKey(i),g=o,a=r;if(e(n)&&(f=P(f)),e(l)&&(u=P(u)),void 0===n||void 0===l||null===f||null===u)return null;\"BR\"===f.nodeName&&([f,g]=K(f)),\"BR\"===u.nodeName&&([u,a]=K(u));const d=f.firstChild;f===u&&null!=d&&\"BR\"===d.nodeName&&0===g&&0===a&&(a=1);try{c.setStart(f,g),c.setEnd(u,a)}catch(e){return null}return!c.collapsed||g===a&&s===i||(c.setStart(u,a),c.setEnd(f,g)),c}function k(e,t){const n=e.getRootElement();if(null===n)return[];const o=n.getBoundingClientRect(),l=getComputedStyle(n),r=parseFloat(l.paddingLeft)+parseFloat(l.paddingRight),s=Array.from(t.getClientRects());let i,c=s.length;s.sort(((e,t)=>{const n=e.top-t.top;return Math.abs(n)<=3?e.left-t.left:n}));for(let e=0;e<c;e++){const t=s[e],n=i&&i.top<=t.top&&i.top+i.height>t.top&&i.left+i.width>t.left,l=t.width+r===o.width;n||l?(s.splice(e--,1),c--):i=t}return s}function I(e){const t={};if(!e)return t;const n=e.split(\";\");for(const e of n)if(\"\"!==e){const[n,o]=e.split(/:([^]+)/);n&&o&&(t[n.trim()]=o.trim())}return t}function B(e){let t=C.get(e);return void 0===t&&(t=I(e),C.set(e,t)),t}function F(e){let t=\"\";for(const n in e)n&&(t+=`${n}: ${e[n]};`);return t}function b(e,o){const l=e.getStartEndPoints();if(o.isSelected(e)&&!t(o)&&null!==l){const[t,r]=l,s=e.isBackward(),i=t.getNode(),c=r.getNode(),f=o.is(i),u=o.is(c);if(f||u){const[t,l]=n(e),r=i.is(c),f=o.is(s?c:i),u=o.is(s?i:c);let g,a=0;if(r)a=t>l?l:t,g=t>l?t:l;else if(f){a=s?l:t,g=void 0}else if(u){a=0,g=s?t:l}o.__text=o.__text.slice(a,g)}}return o}function O(e){if(\"text\"===e.type)return e.offset===e.getNode().getTextContentSize();const t=e.getNode();return o(t)||N(177),e.offset===t.getChildrenSize()}function R(t,n,f){let u=n.getNode(),g=f;if(o(u)){const e=u.getDescendantByIndex(n.offset);null!==e&&(u=e)}for(;g>0&&null!==u;){if(o(u)){const e=u.getLastDescendant();null!==e&&(u=e)}let f=u.getPreviousSibling(),a=0;if(null===f){let e=u.getParentOrThrow(),t=e.getPreviousSibling();for(;null===t;){if(e=e.getParent(),null===e){f=null;break}t=e.getPreviousSibling()}null!==e&&(a=e.isInline()?0:2,f=t)}let d=u.getTextContent();\"\"===d&&o(u)&&!u.isInline()&&(d=\"\\n\\n\");const p=d.length;if(!e(u)||g>=p){const e=u.getParent();u.remove(),null==e||0!==e.getChildrenSize()||l(e)||e.remove(),g-=p+a,u=f}else{const o=u.getKey(),l=t.getEditorState().read((()=>{const t=r(o);return e(t)&&t.isSimpleText()?t.getTextContent():null})),f=p-g,a=d.slice(0,f);if(null!==l&&l!==d){const e=s();let t=u;if(u.isSimpleText())u.setTextContent(l);else{const e=i(l);u.replace(e),t=e}if(c(e)&&e.isCollapsed()){const n=e.anchor.offset;t.select(n,n)}}else if(u.isSimpleText()){const e=n.key===o;let t=n.offset;t<g&&(t=p);const l=e?t-g:0,r=e?t:f;if(e&&0===l){const[e]=u.splitText(l,r);e.remove()}else{const[,e]=u.splitText(l,r);e.remove()}}else{const e=i(a);u.replace(e)}g=0}}}function z(e){const t=e.getStyle(),n=I(t);C.set(t,n)}function A(t,n){(c(t)?t.isCollapsed():e(t)||o(t))||N(280);const l=B(c(t)?t.style:e(t)?t.getStyle():t.getTextStyle()),r=Object.entries(n).reduce(((e,[n,o])=>(\"function\"==typeof o?e[n]=o(l[n],t):null===o?delete e[n]:e[n]=o,e)),{...l}),s=F(r);c(t)||e(t)?t.setStyle(s):t.setTextStyle(s),C.set(s,r)}function M(e,t){if(c(e)&&e.isCollapsed()){A(e,t);const n=e.anchor.getNode();o(n)&&n.isEmpty()&&A(n,t)}L((e=>{A(e,t)}))}function L(n){const o=f();if(!o)return;const l=new Map;if(c(o))for(const e of u(o).getTextSlices())e&&l.set(e.caret.origin.getKey(),e.getSliceIndices());const r=o.getNodes();for(const o of r){if(!e(o)||!o.canHaveFormat())continue;const[r,i]=(s=o,l.get(s.getKey())||[0,s.getTextContentSize()]);if(i!==r)if(t(o)||0===r&&i===o.getTextContentSize())n(o);else{n(o.splitText(r,i)[0===r?0:1])}}var s;c(o)&&\"text\"===o.anchor.type&&\"text\"===o.focus.type&&o.anchor.key===o.focus.key&&$(o)}function $(e){if(e.isBackward()){const{anchor:t,focus:n}=e,{key:o,offset:l,type:r}=t;t.set(n.key,n.offset,n.type),n.set(o,l,r)}}function D(e,t){const n=e.getFormatType(),o=e.getIndent();n!==t.getFormatType()&&t.setFormat(n),o!==t.getIndent()&&t.setIndent(o)}function _(e,t,n=D){if(null===e)return;const l=e.getStartEndPoints(),r=new Map;let s=null;if(l){const[e,t]=l;s=g(),s.anchor.set(e.key,e.offset,e.type),s.focus.set(t.key,t.offset,t.type);const n=Z(e.getNode(),a),i=Z(t.getNode(),a);o(n)&&r.set(n.getKey(),n),o(i)&&r.set(i.getKey(),i)}for(const t of e.getNodes())if(o(t)&&a(t))r.set(t.getKey(),t);else if(null===l){const e=Z(t,a);o(e)&&r.set(e.getKey(),e)}for(const[e,o]of r){const l=t();n(o,l),o.replace(l,!0),s&&(e===s.anchor.key&&s.anchor.set(l.getKey(),s.anchor.offset,s.anchor.type),e===s.focus.key&&s.focus.set(l.getKey(),s.focus.offset,s.focus.type))}s&&e.is(f())&&d(s)}function U(e){return e.getNode().isAttached()}function j(e){let t=e;for(;null!==t&&!p(t);){const e=t.getLatest(),n=t.getParent();0===e.getChildrenSize()&&t.remove(!0),t=n}}function H(e,t,n=null){const o=e.getStartEndPoints(),l=o?o[0]:null,r=e.getNodes(),s=r.length;if(null!==l&&(0===s||1===s&&\"element\"===l.type&&0===l.getNode().getChildrenSize())){const e=\"text\"===l.type?l.getNode().getParentOrThrow():l.getNode(),o=e.getChildren();let r=t();return r.setFormat(e.getFormatType()),r.setIndent(e.getIndent()),o.forEach((e=>r.append(e))),n&&(r=n.append(r)),void e.replace(r)}let i=null,c=[];for(let o=0;o<s;o++){const l=r[o];p(l)?(V(e,c,c.length,t,n),c=[],i=l):null===i||null!==i&&h(l,i)?c.push(l):(V(e,c,c.length,t,n),c=[l])}V(e,c,c.length,t,n)}function V(e,t,n,l,r=null){if(0===t.length)return;const i=t[0],f=new Map,u=[];let g=o(i)?i:i.getParentOrThrow();g.isInline()&&(g=g.getParentOrThrow());let a=!1;for(;null!==g;){const e=g.getPreviousSibling();if(null!==e){g=e,a=!0;break}if(g=g.getParentOrThrow(),p(g))break}const h=new Set;for(let e=0;e<n;e++){const n=t[e];o(n)&&0===n.getChildrenSize()&&h.add(n.getKey())}const m=new Set;for(let e=0;e<n;e++){const n=t[e];let r=n.getParent();if(null!==r&&r.isInline()&&(r=r.getParent()),null!==r&&y(n)&&!m.has(n.getKey())){const e=r.getKey();if(void 0===f.get(e)){const t=l();t.setFormat(r.getFormatType()),t.setIndent(r.getIndent()),u.push(t),f.set(e,t),r.getChildren().forEach((e=>{t.append(e),m.add(e.getKey()),o(e)&&e.getChildrenKeys().forEach((e=>m.add(e)))})),j(r)}}else if(h.has(n.getKey())){o(n)||N(179);const e=l();e.setFormat(n.getFormatType()),e.setIndent(n.getIndent()),u.push(e),n.remove(!0)}}if(null!==r)for(let e=0;e<u.length;e++){const t=u[e];r.append(t)}let S=null;if(p(g))if(a)if(null!==r)g.insertAfter(r);else for(let e=u.length-1;e>=0;e--){const t=u[e];g.insertAfter(t)}else{const e=g.getFirstChild();if(o(e)&&(g=e),null===e)if(r)g.append(r);else for(let e=0;e<u.length;e++){const t=u[e];g.append(t),S=t}else if(null!==r)e.insertBefore(r);else for(let t=0;t<u.length;t++){const n=u[t];e.insertBefore(n),S=n}}else if(r)g.insertAfter(r);else for(let e=u.length-1;e>=0;e--){const t=u[e];g.insertAfter(t),S=t}const x=s();c(x)&&U(x.anchor)&&U(x.focus)?d(x.clone()):null!==S?S.selectEnd():e.dirty=!0}function W(e){const t=e.anchor.getNode(),n=l(t)?t:t.getParentOrThrow(),o=v().getElementByKey(n.getKey());if(null===o)return!1;const r=o.ownerDocument.defaultView;if(null===r)return!1;return\"vertical-rl\"===r.getComputedStyle(o).writingMode}function X(e,t){const n=W(e)?!t:t,l=m(e.focus,n?\"previous\":\"next\");if(S(l))return!1;for(const e of x(l)){if(T(e))return!e.origin.isInline();if(!o(e.origin)){if(w(e.origin))return!0;break}}return!1}function q(e,t,n,o){e.modify(t?\"extend\":\"move\",n,o)}function G(e){const t=e.anchor.getNode();return\"rtl\"===(l(t)?t:t.getParentOrThrow()).getDirection()}function J(e,t,n){const o=G(e);let l;l=W(e)||o?!n:n,q(e,t,l,\"character\")}function Q(e,t,n){const o=B(e.getStyle());return null!==o&&o[t]||n}function Y(t,n,o=\"\"){let l=null;const r=t.getNodes(),s=t.anchor,i=t.focus,f=t.isBackward(),u=f?i.offset:s.offset,g=f?i.getNode():s.getNode();if(c(t)&&t.isCollapsed()&&\"\"!==t.style){const e=B(t.style);if(null!==e&&n in e)return e[n]}for(let t=0;t<r.length;t++){const s=r[t];if((0===t||0!==u||!s.is(g))&&e(s)){const e=Q(s,n,o);if(null===l)l=e;else if(l!==e){l=\"\";break}}}return null===l?o:l}function Z(e,t){let n=e;for(;null!==n&&null!==n.getParent()&&!t(n);)n=n.getParentOrThrow();return t(n)?n:null}const ee=R;export{z as $addNodeStyle,D as $copyBlockFormatIndent,$ as $ensureForwardRangeSelection,L as $forEachSelectedTextNode,Y as $getSelectionStyleValueForProperty,O as $isAtNodeEnd,G as $isParentElementRTL,q as $moveCaretSelection,J as $moveCharacter,M as $patchStyleText,_ as $setBlocksType,X as $shouldOverrideDefaultCharacterSelection,b as $sliceSelectedTextNodeContent,R as $trimTextContentFromAnchor,H as $wrapNodes,E as createDOMRange,k as createRectsFromDOMRange,F as getCSSFromStyleObject,B as getStyleObjectFromCSS,ee as trimTextContentFromAnchor};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}