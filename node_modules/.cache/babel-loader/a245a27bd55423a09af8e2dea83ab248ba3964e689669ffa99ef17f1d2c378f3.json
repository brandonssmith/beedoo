{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\beedoo\\\\src\\\\components\\\\RichTextEditor.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { $getRoot, $getSelection, $isRangeSelection } from 'lexical';\nimport { Bold, Italic, Underline, List, Link, AlignLeft, AlignCenter, AlignRight, Heading1, Heading2, Heading3 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMAGE_UPLOAD_ENDPOINT = '/.netlify/functions/upload-image';\n\n// Custom onChange plugin\nfunction CustomOnChangePlugin({\n  onChange\n}) {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerUpdateListener(({\n      editorState\n    }) => {\n      editorState.read(() => {\n        const root = $getRoot();\n        const text = root.getTextContent();\n        onChange(text);\n      });\n    });\n  }, [editor, onChange]);\n  return null;\n}\n\n// Markdown shortcuts plugin\n_s(CustomOnChangePlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c = CustomOnChangePlugin;\nfunction MarkdownShortcutsPlugin() {\n  _s2();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerUpdateListener(({\n      editorState,\n      dirtyElements\n    }) => {\n      if (dirtyElements.size === 0) return;\n      editorState.read(() => {\n        const selection = $getSelection();\n        if (!$isRangeSelection(selection)) return;\n        const text = selection.getTextContent();\n\n        // Handle markdown shortcuts\n        if (text.startsWith('**') && text.endsWith('**') && text.length > 4) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(2, -2);\n              newSelection.insertText(cleanText);\n              newSelection.formatText('bold');\n            }\n          });\n        } else if (text.startsWith('*') && text.endsWith('*') && text.length > 2) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(1, -1);\n              newSelection.insertText(cleanText);\n              newSelection.formatText('italic');\n            }\n          });\n        } else if (text.startsWith('~') && text.endsWith('~') && text.length > 2) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(1, -1);\n              newSelection.insertText(cleanText);\n              newSelection.formatText('underline');\n            }\n          });\n        } else if (text.startsWith('# ')) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(2);\n              newSelection.insertText(cleanText);\n              // Apply header formatting (simplified - just make it bold and larger)\n              newSelection.formatText('bold');\n            }\n          });\n        } else if (text.startsWith('## ')) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(3);\n              newSelection.insertText(cleanText);\n              newSelection.formatText('bold');\n            }\n          });\n        } else if (text.startsWith('### ')) {\n          editor.update(() => {\n            const newSelection = $getSelection();\n            if ($isRangeSelection(newSelection)) {\n              const cleanText = text.slice(4);\n              newSelection.insertText(cleanText);\n              newSelection.formatText('bold');\n            }\n          });\n        }\n      });\n    });\n  }, [editor]);\n  return null;\n}\n\n// Toolbar component\n_s2(MarkdownShortcutsPlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c2 = MarkdownShortcutsPlugin;\nfunction ToolbarPlugin() {\n  _s3();\n  const [editor] = useLexicalComposerContext();\n  const formatText = format => {\n    editor.update(() => {\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        selection.formatText(format);\n      }\n    });\n  };\n  const formatHeader = level => {\n    editor.update(() => {\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        // For now, just make headers bold\n        // In a full implementation, you'd create proper header nodes\n        selection.formatText('bold');\n      }\n    });\n  };\n  const alignText = alignment => {\n    editor.update(() => {\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        // For now, just insert alignment markers\n        // In a full implementation, you'd set proper CSS alignment\n        const marker = alignment === 'left' ? '' : alignment === 'center' ? ' [CENTER] ' : ' [RIGHT] ';\n        selection.insertText(marker);\n      }\n    });\n  };\n  const insertLink = () => {\n    const url = prompt('Enter URL:');\n    if (url) {\n      const linkText = prompt('Enter link text (optional):', url);\n      const displayText = linkText || url;\n      editor.update(() => {\n        const selection = $getSelection();\n        if ($isRangeSelection(selection)) {\n          // Create markdown-style link\n          const markdownLink = `[${displayText}](${url})`;\n          selection.insertText(markdownLink);\n        }\n      });\n    }\n  };\n  const toggleList = () => {\n    editor.update(() => {\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        // Simple list implementation - just add bullet points\n        const text = selection.getTextContent();\n        const lines = text.split('\\n');\n        const formattedLines = lines.map(line => `â€¢ ${line}`);\n        selection.insertText(formattedLines.join('\\n'));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatText('bold'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Bold (Ctrl+B)\",\n      children: /*#__PURE__*/_jsxDEV(Bold, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatText('italic'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Italic (Ctrl+I)\",\n      children: /*#__PURE__*/_jsxDEV(Italic, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatText('underline'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Underline (Ctrl+U)\",\n      children: /*#__PURE__*/_jsxDEV(Underline, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-px h-6 bg-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatHeader(1),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Heading 1 (# )\",\n      children: /*#__PURE__*/_jsxDEV(Heading1, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatHeader(2),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Heading 2 (## )\",\n      children: /*#__PURE__*/_jsxDEV(Heading2, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => formatHeader(3),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Heading 3 (### )\",\n      children: /*#__PURE__*/_jsxDEV(Heading3, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-px h-6 bg-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => alignText('left'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Align Left\",\n      children: /*#__PURE__*/_jsxDEV(AlignLeft, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => alignText('center'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Align Center\",\n      children: /*#__PURE__*/_jsxDEV(AlignCenter, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => alignText('right'),\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Align Right\",\n      children: /*#__PURE__*/_jsxDEV(AlignRight, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-px h-6 bg-gray-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleList,\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Bullet List\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: insertLink,\n      className: \"p-2 hover:bg-gray-200 rounded\",\n      title: \"Insert Link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"w-4 h-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n\n// Smart URL detection plugin\n_s3(ToolbarPlugin, \"MUJTZ3t3NKyXWeKoJUbyWHO70Z4=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c3 = ToolbarPlugin;\nfunction SmartURLDetectionPlugin() {\n  _s4();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerUpdateListener(({\n      editorState,\n      dirtyElements\n    }) => {\n      if (dirtyElements.size === 0) return;\n      editorState.read(() => {\n        const selection = $getSelection();\n        if (!$isRangeSelection(selection)) return;\n        const text = selection.getTextContent();\n\n        // URL regex pattern - matches http/https URLs and www. URLs\n        const urlRegex = /((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;\n        const matches = text.match(urlRegex);\n        if (matches && matches.length > 0) {\n          // Check if we have unformatted URLs\n          const hasUnformattedUrls = matches.some(url => {\n            // Check if the URL is not already in markdown link format\n            return !text.includes(`[${url}]`) && !text.includes(`[${url.split('/').pop()}]`);\n          });\n          if (hasUnformattedUrls) {\n            editor.update(() => {\n              const newSelection = $getSelection();\n              if ($isRangeSelection(newSelection)) {\n                // Get the current text again\n                const currentText = newSelection.getTextContent();\n\n                // Replace URLs with markdown-style links\n                let formattedText = currentText;\n                matches.forEach(url => {\n                  // Only format if it's not already formatted\n                  if (!formattedText.includes(`[${url}]`)) {\n                    // Prepend https:// if it's a www. URL\n                    const fullUrl = url.startsWith('www.') ? `https://${url}` : url;\n                    // Create a shorter display text for the link\n                    const displayText = url.length > 50 ? url.substring(0, 47) + '...' : url;\n                    formattedText = formattedText.replace(url, `[${displayText}](${fullUrl})`);\n                  }\n                });\n                if (formattedText !== currentText) {\n                  // Replace the entire selection with formatted text\n                  newSelection.insertText(formattedText);\n                }\n              }\n            });\n          }\n        }\n      });\n    });\n  }, [editor]);\n  return null;\n}\n\n// Error boundary component\n_s4(SmartURLDetectionPlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c4 = SmartURLDetectionPlugin;\nfunction ErrorBoundary({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 10\n  }, this);\n}\n_c5 = ErrorBoundary;\nconst RichTextEditor = ({\n  value,\n  onChange,\n  placeholder = \"Start writing...\",\n  className = \"\"\n}) => {\n  _s5();\n  const editorRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Handle image file selection\n  const handleImageChange = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      await uploadAndInsertImage(file);\n    }\n    // Reset file input\n    if (fileInputRef.current) fileInputRef.current.value = '';\n  };\n\n  // Handle drag-and-drop\n  const handleDrop = async event => {\n    event.preventDefault();\n    if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n      const file = event.dataTransfer.files[0];\n      await uploadAndInsertImage(file);\n    }\n  };\n\n  // Prevent default drag-over behavior\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n\n  // Upload image to Netlify function and insert <img> tag\n  const uploadAndInsertImage = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch(IMAGE_UPLOAD_ENDPOINT, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.url) {\n        // Insert <img> tag at cursor position\n        insertImageAtCursor(data.url);\n      } else {\n        alert('Image upload failed: ' + (data.error || 'Unknown error'));\n      }\n    } catch (err) {\n      alert('Image upload failed: ' + err.message);\n    }\n  };\n\n  // Insert <img> tag at the current cursor position\n  const insertImageAtCursor = url => {\n    var _editorRef$current;\n    (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.focus();\n    // Use Lexical API to insert the image tag as HTML\n    // (for simplicity, just insert the HTML string)\n    // In a full Lexical implementation, you'd use a custom node\n    const imgHtml = `<img src=\"${url}\" alt=\"Image\" style=\"max-width:100%;margin:12px 0;\" />`;\n    // Insert the image HTML at the cursor\n    // We'll use document.execCommand for now for simplicity\n    document.execCommand('insertHTML', false, imgHtml);\n  };\n  const initialConfig = {\n    namespace: 'BeedooRichTextEditor',\n    theme: {\n      root: 'outline-none min-h-[200px] p-4',\n      text: {\n        bold: 'font-bold',\n        italic: 'italic',\n        underline: 'underline'\n      }\n    },\n    onError: error => {\n      console.error('Lexical error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `border border-gray-300 rounded-md ${className}`,\n    ref: editorRef,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: /*#__PURE__*/_jsxDEV(LexicalComposer, {\n      initialConfig: initialConfig,\n      children: [/*#__PURE__*/_jsxDEV(ToolbarPlugin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(RichTextPlugin, {\n          contentEditable: /*#__PURE__*/_jsxDEV(ContentEditable, {\n            className: \"outline-none min-h-[200px] p-4\",\n            placeholder: placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this),\n          placeholder: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-4 left-4 text-gray-400 pointer-events-none\",\n            children: placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this),\n          ErrorBoundary: ErrorBoundary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomOnChangePlugin, {\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarkdownShortcutsPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SmartURLDetectionPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HistoryPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoFocusPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2 text-xs text-gray-500\",\n          children: \"Drag & drop or click to upload an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s5(RichTextEditor, \"OftB/g1JdW7yIQyLITmVAsSVKC4=\");\n_c6 = RichTextEditor;\nexport default RichTextEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CustomOnChangePlugin\");\n$RefreshReg$(_c2, \"MarkdownShortcutsPlugin\");\n$RefreshReg$(_c3, \"ToolbarPlugin\");\n$RefreshReg$(_c4, \"SmartURLDetectionPlugin\");\n$RefreshReg$(_c5, \"ErrorBoundary\");\n$RefreshReg$(_c6, \"RichTextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","LexicalComposer","RichTextPlugin","ContentEditable","HistoryPlugin","AutoFocusPlugin","useLexicalComposerContext","$getRoot","$getSelection","$isRangeSelection","Bold","Italic","Underline","List","Link","AlignLeft","AlignCenter","AlignRight","Heading1","Heading2","Heading3","jsxDEV","_jsxDEV","IMAGE_UPLOAD_ENDPOINT","CustomOnChangePlugin","onChange","_s","editor","registerUpdateListener","editorState","read","root","text","getTextContent","_c","MarkdownShortcutsPlugin","_s2","dirtyElements","size","selection","startsWith","endsWith","length","update","newSelection","cleanText","slice","insertText","formatText","_c2","ToolbarPlugin","_s3","format","formatHeader","level","alignText","alignment","marker","insertLink","url","prompt","linkText","displayText","markdownLink","toggleList","lines","split","formattedLines","map","line","join","className","children","type","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c3","SmartURLDetectionPlugin","_s4","urlRegex","matches","match","hasUnformattedUrls","some","includes","pop","currentText","formattedText","forEach","fullUrl","substring","replace","_c4","ErrorBoundary","_c5","RichTextEditor","value","placeholder","_s5","editorRef","fileInputRef","handleImageChange","event","_event$target$files","file","target","files","uploadAndInsertImage","current","handleDrop","preventDefault","dataTransfer","handleDragOver","formData","FormData","append","response","fetch","method","body","data","json","insertImageAtCursor","alert","error","err","message","_editorRef$current","focus","imgHtml","document","execCommand","initialConfig","namespace","theme","bold","italic","underline","onError","console","ref","onDrop","onDragOver","contentEditable","accept","style","display","_fileInputRef$current","click","_c6","$RefreshReg$"],"sources":["C:/Code/beedoo/src/components/RichTextEditor.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\r\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\r\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\r\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\r\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin';\r\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\r\nimport { $getRoot, $getSelection, $isRangeSelection, $createTextNode, $isElementNode } from 'lexical';\r\nimport { Bold, Italic, Underline, List, Link, AlignLeft, AlignCenter, AlignRight, Heading1, Heading2, Heading3 } from 'lucide-react';\r\n\r\ninterface RichTextEditorProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\nconst IMAGE_UPLOAD_ENDPOINT = '/.netlify/functions/upload-image';\r\n\r\n// Custom onChange plugin\r\nfunction CustomOnChangePlugin({ onChange }: { onChange: (value: string) => void }): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState }) => {\r\n      editorState.read(() => {\r\n        const root = $getRoot();\r\n        const text = root.getTextContent();\r\n        onChange(text);\r\n      });\r\n    });\r\n  }, [editor, onChange]);\r\n\r\n  return null;\r\n}\r\n\r\n// Markdown shortcuts plugin\r\nfunction MarkdownShortcutsPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // Handle markdown shortcuts\r\n        if (text.startsWith('**') && text.endsWith('**') && text.length > 4) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2, -2);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('*') && text.endsWith('*') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('italic');\r\n            }\r\n          });\r\n        } else if (text.startsWith('~') && text.endsWith('~') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('underline');\r\n            }\r\n          });\r\n        } else if (text.startsWith('# ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2);\r\n              newSelection.insertText(cleanText);\r\n              // Apply header formatting (simplified - just make it bold and larger)\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('## ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(3);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('### ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(4);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Toolbar component\r\nfunction ToolbarPlugin(): JSX.Element {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  const formatText = (format: 'bold' | 'italic' | 'underline') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        selection.formatText(format);\r\n      }\r\n    });\r\n  };\r\n\r\n  const formatHeader = (level: 1 | 2 | 3) => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just make headers bold\r\n        // In a full implementation, you'd create proper header nodes\r\n        selection.formatText('bold');\r\n      }\r\n    });\r\n  };\r\n\r\n  const alignText = (alignment: 'left' | 'center' | 'right') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just insert alignment markers\r\n        // In a full implementation, you'd set proper CSS alignment\r\n        const marker = alignment === 'left' ? '' : alignment === 'center' ? ' [CENTER] ' : ' [RIGHT] ';\r\n        selection.insertText(marker);\r\n      }\r\n    });\r\n  };\r\n\r\n  const insertLink = () => {\r\n    const url = prompt('Enter URL:');\r\n    if (url) {\r\n      const linkText = prompt('Enter link text (optional):', url);\r\n      const displayText = linkText || url;\r\n      \r\n      editor.update(() => {\r\n        const selection = $getSelection();\r\n        if ($isRangeSelection(selection)) {\r\n          // Create markdown-style link\r\n          const markdownLink = `[${displayText}](${url})`;\r\n          selection.insertText(markdownLink);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // Simple list implementation - just add bullet points\r\n        const text = selection.getTextContent();\r\n        const lines = text.split('\\n');\r\n        const formattedLines = lines.map(line => `â€¢ ${line}`);\r\n        selection.insertText(formattedLines.join('\\n'));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\">\r\n      {/* Text Formatting */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('bold')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bold (Ctrl+B)\"\r\n      >\r\n        <Bold className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('italic')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Italic (Ctrl+I)\"\r\n      >\r\n        <Italic className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('underline')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Underline (Ctrl+U)\"\r\n      >\r\n        <Underline className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Headers */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(1)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 1 (# )\"\r\n      >\r\n        <Heading1 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(2)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 2 (## )\"\r\n      >\r\n        <Heading2 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(3)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 3 (### )\"\r\n      >\r\n        <Heading3 className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Alignment */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('left')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Left\"\r\n      >\r\n        <AlignLeft className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('center')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Center\"\r\n      >\r\n        <AlignCenter className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('right')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Right\"\r\n      >\r\n        <AlignRight className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Lists and Links */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={toggleList}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bullet List\"\r\n      >\r\n        <List className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={insertLink}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Insert Link\"\r\n      >\r\n        <Link className=\"w-4 h-4\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Smart URL detection plugin\r\nfunction SmartURLDetectionPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // URL regex pattern - matches http/https URLs and www. URLs\r\n        const urlRegex = /((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;\r\n        const matches = text.match(urlRegex);\r\n        \r\n        if (matches && matches.length > 0) {\r\n          // Check if we have unformatted URLs\r\n          const hasUnformattedUrls = matches.some(url => {\r\n            // Check if the URL is not already in markdown link format\r\n            return !text.includes(`[${url}]`) && !text.includes(`[${url.split('/').pop()}]`);\r\n          });\r\n\r\n          if (hasUnformattedUrls) {\r\n            editor.update(() => {\r\n              const newSelection = $getSelection();\r\n              if ($isRangeSelection(newSelection)) {\r\n                // Get the current text again\r\n                const currentText = newSelection.getTextContent();\r\n                \r\n                // Replace URLs with markdown-style links\r\n                let formattedText = currentText;\r\n                matches.forEach(url => {\r\n                  // Only format if it's not already formatted\r\n                  if (!formattedText.includes(`[${url}]`)) {\r\n                    // Prepend https:// if it's a www. URL\r\n                    const fullUrl = url.startsWith('www.') ? `https://${url}` : url;\r\n                    // Create a shorter display text for the link\r\n                    const displayText = url.length > 50 ? url.substring(0, 47) + '...' : url;\r\n                    formattedText = formattedText.replace(url, `[${displayText}](${fullUrl})`);\r\n                  }\r\n                });\r\n                \r\n                if (formattedText !== currentText) {\r\n                  // Replace the entire selection with formatted text\r\n                  newSelection.insertText(formattedText);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Error boundary component\r\nfunction ErrorBoundary({ children }: { children: React.ReactNode }): JSX.Element {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({ \r\n  value, \r\n  onChange, \r\n  placeholder = \"Start writing...\",\r\n  className = \"\"\r\n}) => {\r\n  const editorRef = useRef<HTMLDivElement>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Handle image file selection\r\n  const handleImageChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      await uploadAndInsertImage(file);\r\n    }\r\n    // Reset file input\r\n    if (fileInputRef.current) fileInputRef.current.value = '';\r\n  };\r\n\r\n  // Handle drag-and-drop\r\n  const handleDrop = async (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\r\n      const file = event.dataTransfer.files[0];\r\n      await uploadAndInsertImage(file);\r\n    }\r\n  };\r\n\r\n  // Prevent default drag-over behavior\r\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Upload image to Netlify function and insert <img> tag\r\n  const uploadAndInsertImage = async (file: File) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    try {\r\n      const response = await fetch(IMAGE_UPLOAD_ENDPOINT, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      const data = await response.json();\r\n      if (data.url) {\r\n        // Insert <img> tag at cursor position\r\n        insertImageAtCursor(data.url);\r\n      } else {\r\n        alert('Image upload failed: ' + (data.error || 'Unknown error'));\r\n      }\r\n    } catch (err) {\r\n      alert('Image upload failed: ' + err.message);\r\n    }\r\n  };\r\n\r\n  // Insert <img> tag at the current cursor position\r\n  const insertImageAtCursor = (url: string) => {\r\n    editorRef.current?.focus();\r\n    // Use Lexical API to insert the image tag as HTML\r\n    // (for simplicity, just insert the HTML string)\r\n    // In a full Lexical implementation, you'd use a custom node\r\n    const imgHtml = `<img src=\"${url}\" alt=\"Image\" style=\"max-width:100%;margin:12px 0;\" />`;\r\n    // Insert the image HTML at the cursor\r\n    // We'll use document.execCommand for now for simplicity\r\n    document.execCommand('insertHTML', false, imgHtml);\r\n  };\r\n\r\n  const initialConfig = {\r\n    namespace: 'BeedooRichTextEditor',\r\n    theme: {\r\n      root: 'outline-none min-h-[200px] p-4',\r\n      text: {\r\n        bold: 'font-bold',\r\n        italic: 'italic',\r\n        underline: 'underline',\r\n      },\r\n    },\r\n    onError: (error: Error) => {\r\n      console.error('Lexical error:', error);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={`border border-gray-300 rounded-md ${className}`}\r\n      ref={editorRef}\r\n      onDrop={handleDrop}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      <LexicalComposer initialConfig={initialConfig}>\r\n        <ToolbarPlugin />\r\n        <div className=\"relative\">\r\n          <RichTextPlugin\r\n            contentEditable={\r\n              <ContentEditable \r\n                className=\"outline-none min-h-[200px] p-4\"\r\n                placeholder={placeholder}\r\n              />\r\n            }\r\n            placeholder={\r\n              <div className=\"absolute top-4 left-4 text-gray-400 pointer-events-none\">\r\n                {placeholder}\r\n              </div>\r\n            }\r\n            ErrorBoundary={ErrorBoundary}\r\n          />\r\n          <CustomOnChangePlugin onChange={onChange} />\r\n          <MarkdownShortcutsPlugin />\r\n          <SmartURLDetectionPlugin />\r\n          <HistoryPlugin />\r\n          <AutoFocusPlugin />\r\n        </div>\r\n        {/* Hidden file input for image uploads */}\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          style={{ display: 'none' }}\r\n          onChange={handleImageChange}\r\n        />\r\n        {/* Image upload button in toolbar */}\r\n        <div className=\"p-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200\"\r\n            onClick={() => fileInputRef.current?.click()}\r\n          >\r\n            Upload Image\r\n          </button>\r\n          <span className=\"ml-2 text-xs text-gray-500\">Drag & drop or click to upload an image</span>\r\n        </div>\r\n      </LexicalComposer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}