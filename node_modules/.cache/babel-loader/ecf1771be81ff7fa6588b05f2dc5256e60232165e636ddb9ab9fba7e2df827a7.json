{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $generateHtmlFromNodes as t, $generateNodesFromDOM as e } from \"@lexical/html\";\nimport { $addNodeStyle as n, $sliceSelectedTextNodeContent as o } from \"@lexical/selection\";\nimport { objectKlassEquals as r } from \"@lexical/utils\";\nimport { $isRangeSelection as i, $getSelection as l, $createTabNode as s, SELECTION_INSERT_CLIPBOARD_NODES_COMMAND as c, $caretFromPoint as a, $isTextPointCaret as u, $getCaretRange as f, $getChildCaret as d, $getRoot as p, $isTextNode as g, $isElementNode as m, $parseSerializedNode as h, getDOMSelection as x, COPY_COMMAND as w, COMMAND_PRIORITY_CRITICAL as y, isSelectionWithinEditor as T, $getEditor as v, $cloneWithProperties as C } from \"lexical\";\nfunction D(t) {\n  const n = new URL(\"https://lexical.dev/docs/error\"),\n    o = new URLSearchParams();\n  o.append(\"code\", t);\n  for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    e[_key - 1] = arguments[_key];\n  }\n  for (const t of e) o.append(\"v\", t);\n  throw n.search = o.toString(), Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`);\n}\nfunction N(e) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : l();\n  return null == n && D(166), i(n) && n.isCollapsed() || 0 === n.getNodes().length ? \"\" : t(e, n);\n}\nfunction S(t) {\n  let e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : l();\n  return null == e && D(166), i(e) && e.isCollapsed() || 0 === e.getNodes().length ? null : JSON.stringify(E(t, e));\n}\nfunction R(t, e) {\n  const n = t.getData(\"text/plain\") || t.getData(\"text/uri-list\");\n  null != n && e.insertRawText(n);\n}\nfunction A(t, n, o) {\n  const r = t.getData(\"application/x-lexical-editor\");\n  if (r) try {\n    const t = JSON.parse(r);\n    if (t.namespace === o._config.namespace && Array.isArray(t.nodes)) {\n      return P(o, L(t.nodes), n);\n    }\n  } catch (t) {}\n  const c = t.getData(\"text/html\"),\n    a = t.getData(\"text/plain\");\n  if (c && a !== c) try {\n    const t = new DOMParser().parseFromString(function (t) {\n      if (window.trustedTypes && window.trustedTypes.createPolicy) {\n        return window.trustedTypes.createPolicy(\"lexical\", {\n          createHTML: t => t\n        }).createHTML(t);\n      }\n      return t;\n    }(c), \"text/html\");\n    return P(o, e(o, t), n);\n  } catch (t) {}\n  const u = a || t.getData(\"text/uri-list\");\n  if (null != u) if (i(n)) {\n    const t = u.split(/(\\r?\\n|\\t)/);\n    \"\" === t[t.length - 1] && t.pop();\n    for (let e = 0; e < t.length; e++) {\n      const n = l();\n      if (i(n)) {\n        const o = t[e];\n        \"\\n\" === o || \"\\r\\n\" === o ? n.insertParagraph() : \"\\t\" === o ? n.insertNodes([s()]) : n.insertText(o);\n      }\n    }\n  } else n.insertRawText(u);\n}\nfunction P(t, e, n) {\n  t.dispatchCommand(c, {\n    nodes: e,\n    selection: n\n  }) || (n.insertNodes(e), function (t) {\n    if (i(t) && t.isCollapsed()) {\n      const e = t.anchor;\n      let n = null;\n      const o = a(e, \"previous\");\n      if (o) if (u(o)) n = o.origin;else {\n        const t = f(o, d(p(), \"next\").getFlipped());\n        for (const e of t) {\n          if (g(e.origin)) {\n            n = e.origin;\n            break;\n          }\n          if (m(e.origin) && !e.origin.isInline()) break;\n        }\n      }\n      if (n && g(n)) {\n        const e = n.getFormat(),\n          o = n.getStyle();\n        t.format === e && t.style === o || (t.format = e, t.style = o, t.dirty = !0);\n      }\n    }\n  }(n));\n}\nfunction _(t, e, n) {\n  let r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  let i = null === e || n.isSelected(e);\n  const l = m(n) && n.excludeFromCopy(\"html\");\n  let s = n;\n  if (null !== e) {\n    let t = C(n);\n    t = g(t) && null !== e ? o(e, t) : t, s = t;\n  }\n  const c = m(s) ? s.getChildren() : [],\n    a = function (t) {\n      const e = t.exportJSON(),\n        n = t.constructor;\n      if (e.type !== n.getType() && D(58, n.name), m(t)) {\n        const t = e.children;\n        Array.isArray(t) || D(59, n.name);\n      }\n      return e;\n    }(s);\n  if (g(s)) {\n    const t = s.__text;\n    t.length > 0 ? a.text = t : i = !1;\n  }\n  for (let o = 0; o < c.length; o++) {\n    const r = c[o],\n      l = _(t, e, r, a.children);\n    !i && m(n) && l && n.extractWithChild(r, e, \"clone\") && (i = !0);\n  }\n  if (i && !l) r.push(a);else if (Array.isArray(a.children)) for (let t = 0; t < a.children.length; t++) {\n    const e = a.children[t];\n    r.push(e);\n  }\n  return i;\n}\nfunction E(t, e) {\n  const n = [],\n    o = p().getChildren();\n  for (let r = 0; r < o.length; r++) {\n    _(t, e, o[r], n);\n  }\n  return {\n    namespace: t._config.namespace,\n    nodes: n\n  };\n}\nfunction L(t) {\n  const e = [];\n  for (let o = 0; o < t.length; o++) {\n    const r = t[o],\n      i = h(r);\n    g(i) && n(i), e.push(i);\n  }\n  return e;\n}\nlet b = null;\nasync function F(t, e, n) {\n  if (null !== b) return !1;\n  if (null !== e) return new Promise((o, r) => {\n    t.update(() => {\n      o(M(t, e, n));\n    });\n  });\n  const o = t.getRootElement(),\n    i = t._window || window,\n    l = window.document,\n    s = x(i);\n  if (null === o || null === s) return !1;\n  const c = l.createElement(\"span\");\n  c.style.cssText = \"position: fixed; top: -1000px;\", c.append(l.createTextNode(\"#\")), o.append(c);\n  const a = new Range();\n  return a.setStart(c, 0), a.setEnd(c, 1), s.removeAllRanges(), s.addRange(a), new Promise((e, o) => {\n    const i = t.registerCommand(w, o => (r(o, ClipboardEvent) && (i(), null !== b && (window.clearTimeout(b), b = null), e(M(t, o, n))), !0), y);\n    b = window.setTimeout(() => {\n      i(), b = null, e(!1);\n    }, 50), l.execCommand(\"copy\"), c.remove();\n  });\n}\nfunction M(t, e, n) {\n  if (void 0 === n) {\n    const e = x(t._window);\n    if (!e) return !1;\n    const o = e.anchorNode,\n      r = e.focusNode;\n    if (null !== o && null !== r && !T(t, o, r)) return !1;\n    const i = l();\n    if (null === i) return !1;\n    n = J(i);\n  }\n  e.preventDefault();\n  const o = e.clipboardData;\n  return null !== o && (k(o, n), !0);\n}\nconst O = [[\"text/html\", N], [\"application/x-lexical-editor\", S]];\nfunction J() {\n  let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : l();\n  const e = {\n    \"text/plain\": t ? t.getTextContent() : \"\"\n  };\n  if (t) {\n    const n = v();\n    for (const [o, r] of O) {\n      const i = r(n, t);\n      null !== i && (e[o] = i);\n    }\n  }\n  return e;\n}\nfunction k(t, e) {\n  for (const n in e) {\n    const o = e[n];\n    void 0 !== o && t.setData(n, o);\n  }\n}\nexport { E as $generateJSONFromSelectedNodes, L as $generateNodesFromSerializedNodes, J as $getClipboardDataFromSelection, N as $getHtmlContent, S as $getLexicalContent, R as $insertDataTransferForPlainText, A as $insertDataTransferForRichText, P as $insertGeneratedNodes, F as copyToClipboard, k as setLexicalClipboardDataTransfer };","map":{"version":3,"names":["$generateHtmlFromNodes","t","$generateNodesFromDOM","e","$addNodeStyle","n","$sliceSelectedTextNodeContent","o","objectKlassEquals","r","$isRangeSelection","i","$getSelection","l","$createTabNode","s","SELECTION_INSERT_CLIPBOARD_NODES_COMMAND","c","$caretFromPoint","a","$isTextPointCaret","u","$getCaretRange","f","$getChildCaret","d","$getRoot","p","$isTextNode","g","$isElementNode","m","$parseSerializedNode","h","getDOMSelection","x","COPY_COMMAND","w","COMMAND_PRIORITY_CRITICAL","y","isSelectionWithinEditor","T","$getEditor","v","$cloneWithProperties","C","D","URL","URLSearchParams","append","_len","arguments","length","Array","_key","search","toString","Error","N","undefined","isCollapsed","getNodes","S","JSON","stringify","E","R","getData","insertRawText","A","parse","namespace","_config","isArray","nodes","P","L","DOMParser","parseFromString","window","trustedTypes","createPolicy","createHTML","split","pop","insertParagraph","insertNodes","insertText","dispatchCommand","selection","anchor","origin","getFlipped","isInline","getFormat","getStyle","format","style","dirty","_","isSelected","excludeFromCopy","getChildren","exportJSON","constructor","type","getType","name","children","__text","text","extractWithChild","push","b","F","Promise","update","M","getRootElement","_window","document","createElement","cssText","createTextNode","Range","setStart","setEnd","removeAllRanges","addRange","registerCommand","ClipboardEvent","clearTimeout","setTimeout","execCommand","remove","anchorNode","focusNode","J","preventDefault","clipboardData","k","O","getTextContent","setData","$generateJSONFromSelectedNodes","$generateNodesFromSerializedNodes","$getClipboardDataFromSelection","$getHtmlContent","$getLexicalContent","$insertDataTransferForPlainText","$insertDataTransferForRichText","$insertGeneratedNodes","copyToClipboard","setLexicalClipboardDataTransfer"],"sources":["C:/Code/beedoo/node_modules/@lexical/clipboard/LexicalClipboard.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{$generateHtmlFromNodes as t,$generateNodesFromDOM as e}from\"@lexical/html\";import{$addNodeStyle as n,$sliceSelectedTextNodeContent as o}from\"@lexical/selection\";import{objectKlassEquals as r}from\"@lexical/utils\";import{$isRangeSelection as i,$getSelection as l,$createTabNode as s,SELECTION_INSERT_CLIPBOARD_NODES_COMMAND as c,$caretFromPoint as a,$isTextPointCaret as u,$getCaretRange as f,$getChildCaret as d,$getRoot as p,$isTextNode as g,$isElementNode as m,$parseSerializedNode as h,getDOMSelection as x,COPY_COMMAND as w,COMMAND_PRIORITY_CRITICAL as y,isSelectionWithinEditor as T,$getEditor as v,$cloneWithProperties as C}from\"lexical\";function D(t,...e){const n=new URL(\"https://lexical.dev/docs/error\"),o=new URLSearchParams;o.append(\"code\",t);for(const t of e)o.append(\"v\",t);throw n.search=o.toString(),Error(`Minified Lexical error #${t}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}function N(e,n=l()){return null==n&&D(166),i(n)&&n.isCollapsed()||0===n.getNodes().length?\"\":t(e,n)}function S(t,e=l()){return null==e&&D(166),i(e)&&e.isCollapsed()||0===e.getNodes().length?null:JSON.stringify(E(t,e))}function R(t,e){const n=t.getData(\"text/plain\")||t.getData(\"text/uri-list\");null!=n&&e.insertRawText(n)}function A(t,n,o){const r=t.getData(\"application/x-lexical-editor\");if(r)try{const t=JSON.parse(r);if(t.namespace===o._config.namespace&&Array.isArray(t.nodes)){return P(o,L(t.nodes),n)}}catch(t){}const c=t.getData(\"text/html\"),a=t.getData(\"text/plain\");if(c&&a!==c)try{const t=(new DOMParser).parseFromString(function(t){if(window.trustedTypes&&window.trustedTypes.createPolicy){return window.trustedTypes.createPolicy(\"lexical\",{createHTML:t=>t}).createHTML(t)}return t}(c),\"text/html\");return P(o,e(o,t),n)}catch(t){}const u=a||t.getData(\"text/uri-list\");if(null!=u)if(i(n)){const t=u.split(/(\\r?\\n|\\t)/);\"\"===t[t.length-1]&&t.pop();for(let e=0;e<t.length;e++){const n=l();if(i(n)){const o=t[e];\"\\n\"===o||\"\\r\\n\"===o?n.insertParagraph():\"\\t\"===o?n.insertNodes([s()]):n.insertText(o)}}}else n.insertRawText(u)}function P(t,e,n){t.dispatchCommand(c,{nodes:e,selection:n})||(n.insertNodes(e),function(t){if(i(t)&&t.isCollapsed()){const e=t.anchor;let n=null;const o=a(e,\"previous\");if(o)if(u(o))n=o.origin;else{const t=f(o,d(p(),\"next\").getFlipped());for(const e of t){if(g(e.origin)){n=e.origin;break}if(m(e.origin)&&!e.origin.isInline())break}}if(n&&g(n)){const e=n.getFormat(),o=n.getStyle();t.format===e&&t.style===o||(t.format=e,t.style=o,t.dirty=!0)}}}(n))}function _(t,e,n,r=[]){let i=null===e||n.isSelected(e);const l=m(n)&&n.excludeFromCopy(\"html\");let s=n;if(null!==e){let t=C(n);t=g(t)&&null!==e?o(e,t):t,s=t}const c=m(s)?s.getChildren():[],a=function(t){const e=t.exportJSON(),n=t.constructor;if(e.type!==n.getType()&&D(58,n.name),m(t)){const t=e.children;Array.isArray(t)||D(59,n.name)}return e}(s);if(g(s)){const t=s.__text;t.length>0?a.text=t:i=!1}for(let o=0;o<c.length;o++){const r=c[o],l=_(t,e,r,a.children);!i&&m(n)&&l&&n.extractWithChild(r,e,\"clone\")&&(i=!0)}if(i&&!l)r.push(a);else if(Array.isArray(a.children))for(let t=0;t<a.children.length;t++){const e=a.children[t];r.push(e)}return i}function E(t,e){const n=[],o=p().getChildren();for(let r=0;r<o.length;r++){_(t,e,o[r],n)}return{namespace:t._config.namespace,nodes:n}}function L(t){const e=[];for(let o=0;o<t.length;o++){const r=t[o],i=h(r);g(i)&&n(i),e.push(i)}return e}let b=null;async function F(t,e,n){if(null!==b)return!1;if(null!==e)return new Promise(((o,r)=>{t.update((()=>{o(M(t,e,n))}))}));const o=t.getRootElement(),i=t._window||window,l=window.document,s=x(i);if(null===o||null===s)return!1;const c=l.createElement(\"span\");c.style.cssText=\"position: fixed; top: -1000px;\",c.append(l.createTextNode(\"#\")),o.append(c);const a=new Range;return a.setStart(c,0),a.setEnd(c,1),s.removeAllRanges(),s.addRange(a),new Promise(((e,o)=>{const i=t.registerCommand(w,(o=>(r(o,ClipboardEvent)&&(i(),null!==b&&(window.clearTimeout(b),b=null),e(M(t,o,n))),!0)),y);b=window.setTimeout((()=>{i(),b=null,e(!1)}),50),l.execCommand(\"copy\"),c.remove()}))}function M(t,e,n){if(void 0===n){const e=x(t._window);if(!e)return!1;const o=e.anchorNode,r=e.focusNode;if(null!==o&&null!==r&&!T(t,o,r))return!1;const i=l();if(null===i)return!1;n=J(i)}e.preventDefault();const o=e.clipboardData;return null!==o&&(k(o,n),!0)}const O=[[\"text/html\",N],[\"application/x-lexical-editor\",S]];function J(t=l()){const e={\"text/plain\":t?t.getTextContent():\"\"};if(t){const n=v();for(const[o,r]of O){const i=r(n,t);null!==i&&(e[o]=i)}}return e}function k(t,e){for(const n in e){const o=e[n];void 0!==o&&t.setData(n,o)}}export{E as $generateJSONFromSelectedNodes,L as $generateNodesFromSerializedNodes,J as $getClipboardDataFromSelection,N as $getHtmlContent,S as $getLexicalContent,R as $insertDataTransferForPlainText,A as $insertDataTransferForRichText,P as $insertGeneratedNodes,F as copyToClipboard,k as setLexicalClipboardDataTransfer};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}