{"ast":null,"code":"import React from'react';import TaskItem from'./TaskItem';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=_ref=>{let{tasks,onUpdateTask,onDeleteTask,onAddSubtask,onAddNextStep,showCompletedTasks}=_ref;if(tasks.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow p-8 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-500\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"mx-auto h-12 w-12 text-gray-400\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-2 text-sm font-medium text-gray-900\",children:\"No tasks\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500\",children:\"Get started by creating a new task.\"})]})});}// Filter tasks based on global completed tasks visibility\nconst filteredTasks=showCompletedTasks?tasks:tasks.filter(task=>!task.completed);return/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:filteredTasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,onUpdateTask:onUpdateTask,onDeleteTask:onDeleteTask,onAddSubtask:onAddSubtask,onAddNextStep:onAddNextStep,level:0,showCompletedTasks:showCompletedTasks},task.id))});};export default TaskList;","map":{"version":3,"names":["React","TaskItem","jsx","_jsx","jsxs","_jsxs","TaskList","_ref","tasks","onUpdateTask","onDeleteTask","onAddSubtask","onAddNextStep","showCompletedTasks","length","className","children","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","filteredTasks","filter","task","completed","map","level","id"],"sources":["C:/Code/beedoo/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { Task } from '../types/Task';\nimport TaskItem from './TaskItem';\n\ninterface TaskListProps {\n  tasks: Task[];\n  onUpdateTask: (id: string, updates: Partial<Task>) => void;\n  onDeleteTask: (id: string) => void;\n  onAddSubtask: (parentId: string, subtask: Task) => void;\n  onAddNextStep: (parentId: string, nextStep: Task) => void;\n  showCompletedTasks: boolean;\n}\n\nconst TaskList: React.FC<TaskListProps> = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask,\n  onAddSubtask,\n  onAddNextStep,\n  showCompletedTasks,\n}) => {\n  if (tasks.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n        <div className=\"text-gray-500\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No tasks</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Get started by creating a new task.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Filter tasks based on global completed tasks visibility\n  const filteredTasks = showCompletedTasks \n    ? tasks \n    : tasks.filter(task => !task.completed);\n\n  return (\n    <div className=\"space-y-4\">\n      {filteredTasks.map((task) => (\n        <TaskItem\n          key={task.id}\n          task={task}\n          onUpdateTask={onUpdateTask}\n          onDeleteTask={onDeleteTask}\n          onAddSubtask={onAddSubtask}\n          onAddNextStep={onAddNextStep}\n          level={0}\n          showCompletedTasks={showCompletedTasks}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAWlC,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAOpC,IAPqC,CACzCC,KAAK,CACLC,YAAY,CACZC,YAAY,CACZC,YAAY,CACZC,aAAa,CACbC,kBACF,CAAC,CAAAN,IAAA,CACC,GAAIC,KAAK,CAACM,MAAM,GAAK,CAAC,CAAE,CACtB,mBACEX,IAAA,QAAKY,SAAS,CAAC,4CAA4C,CAAAC,QAAA,cACzDX,KAAA,QAAKU,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5Bb,IAAA,QACEY,SAAS,CAAC,iCAAiC,CAC3CE,IAAI,CAAC,MAAM,CACXC,OAAO,CAAC,WAAW,CACnBC,MAAM,CAAC,cAAc,CACrB,cAAY,MAAM,CAAAH,QAAA,cAElBb,IAAA,SACEiB,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAE,CAAE,CACfC,CAAC,CAAC,gIAAgI,CACnI,CAAC,CACC,CAAC,cACNpB,IAAA,OAAIY,SAAS,CAAC,wCAAwC,CAAAC,QAAA,CAAC,UAAQ,CAAI,CAAC,cACpEb,IAAA,MAAGY,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,qCAE1C,CAAG,CAAC,EACD,CAAC,CACH,CAAC,CAEV,CAEA;AACA,KAAM,CAAAQ,aAAa,CAAGX,kBAAkB,CACpCL,KAAK,CACLA,KAAK,CAACiB,MAAM,CAACC,IAAI,EAAI,CAACA,IAAI,CAACC,SAAS,CAAC,CAEzC,mBACExB,IAAA,QAAKY,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBQ,aAAa,CAACI,GAAG,CAAEF,IAAI,eACtBvB,IAAA,CAACF,QAAQ,EAEPyB,IAAI,CAAEA,IAAK,CACXjB,YAAY,CAAEA,YAAa,CAC3BC,YAAY,CAAEA,YAAa,CAC3BC,YAAY,CAAEA,YAAa,CAC3BC,aAAa,CAAEA,aAAc,CAC7BiB,KAAK,CAAE,CAAE,CACThB,kBAAkB,CAAEA,kBAAmB,EAPlCa,IAAI,CAACI,EAQX,CACF,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}