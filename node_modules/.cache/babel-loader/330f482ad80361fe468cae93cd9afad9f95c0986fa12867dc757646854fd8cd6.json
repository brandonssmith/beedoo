{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { addClassNamesToElement, mergeRegister, removeClassNamesFromElement } from '@lexical/utils';\nimport { createCommand, DecoratorNode, $applyNodeReplacement, CLICK_COMMAND, COMMAND_PRIORITY_LOW } from 'lexical';\nimport { useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst INSERT_HORIZONTAL_RULE_COMMAND = createCommand('INSERT_HORIZONTAL_RULE_COMMAND');\nfunction HorizontalRuleComponent({\n  nodeKey\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(CLICK_COMMAND, event => {\n      const hrElem = editor.getElementByKey(nodeKey);\n      if (event.target === hrElem) {\n        if (!event.shiftKey) {\n          clearSelection();\n        }\n        setSelected(!isSelected);\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW));\n  }, [clearSelection, editor, isSelected, nodeKey, setSelected]);\n  useEffect(() => {\n    const hrElem = editor.getElementByKey(nodeKey);\n    const isSelectedClassName = editor._config.theme.hrSelected ?? 'selected';\n    if (hrElem !== null) {\n      if (isSelected) {\n        addClassNamesToElement(hrElem, isSelectedClassName);\n      } else {\n        removeClassNamesFromElement(hrElem, isSelectedClassName);\n      }\n    }\n  }, [editor, isSelected, nodeKey]);\n  return null;\n}\nclass HorizontalRuleNode extends DecoratorNode {\n  static getType() {\n    return 'horizontalrule';\n  }\n  static clone(node) {\n    return new HorizontalRuleNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createHorizontalRuleNode().updateFromJSON(serializedNode);\n  }\n  static importDOM() {\n    return {\n      hr: () => ({\n        conversion: $convertHorizontalRuleElement,\n        priority: 0\n      })\n    };\n  }\n  exportDOM() {\n    return {\n      element: document.createElement('hr')\n    };\n  }\n  createDOM(config) {\n    const element = document.createElement('hr');\n    addClassNamesToElement(element, config.theme.hr);\n    return element;\n  }\n  getTextContent() {\n    return '\\n';\n  }\n  isInline() {\n    return false;\n  }\n  updateDOM() {\n    return false;\n  }\n  decorate() {\n    return /*#__PURE__*/jsx(HorizontalRuleComponent, {\n      nodeKey: this.__key\n    });\n  }\n}\nfunction $convertHorizontalRuleElement() {\n  return {\n    node: $createHorizontalRuleNode()\n  };\n}\nfunction $createHorizontalRuleNode() {\n  return $applyNodeReplacement(new HorizontalRuleNode());\n}\nfunction $isHorizontalRuleNode(node) {\n  return node instanceof HorizontalRuleNode;\n}\nexport { $createHorizontalRuleNode, $isHorizontalRuleNode, HorizontalRuleNode, INSERT_HORIZONTAL_RULE_COMMAND };","map":{"version":3,"names":["useLexicalComposerContext","useLexicalNodeSelection","addClassNamesToElement","mergeRegister","removeClassNamesFromElement","createCommand","DecoratorNode","$applyNodeReplacement","CLICK_COMMAND","COMMAND_PRIORITY_LOW","useEffect","jsx","INSERT_HORIZONTAL_RULE_COMMAND","HorizontalRuleComponent","nodeKey","editor","isSelected","setSelected","clearSelection","registerCommand","event","hrElem","getElementByKey","target","shiftKey","isSelectedClassName","_config","theme","hrSelected","HorizontalRuleNode","getType","clone","node","__key","importJSON","serializedNode","$createHorizontalRuleNode","updateFromJSON","importDOM","hr","conversion","$convertHorizontalRuleElement","priority","exportDOM","element","document","createElement","createDOM","config","getTextContent","isInline","updateDOM","decorate","$isHorizontalRuleNode"],"sources":["C:/Code/beedoo/node_modules/@lexical/react/LexicalHorizontalRuleNode.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { addClassNamesToElement, mergeRegister, removeClassNamesFromElement } from '@lexical/utils';\nimport { createCommand, DecoratorNode, $applyNodeReplacement, CLICK_COMMAND, COMMAND_PRIORITY_LOW } from 'lexical';\nimport { useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst INSERT_HORIZONTAL_RULE_COMMAND = createCommand('INSERT_HORIZONTAL_RULE_COMMAND');\nfunction HorizontalRuleComponent({\n  nodeKey\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  useEffect(() => {\n    return mergeRegister(editor.registerCommand(CLICK_COMMAND, event => {\n      const hrElem = editor.getElementByKey(nodeKey);\n      if (event.target === hrElem) {\n        if (!event.shiftKey) {\n          clearSelection();\n        }\n        setSelected(!isSelected);\n        return true;\n      }\n      return false;\n    }, COMMAND_PRIORITY_LOW));\n  }, [clearSelection, editor, isSelected, nodeKey, setSelected]);\n  useEffect(() => {\n    const hrElem = editor.getElementByKey(nodeKey);\n    const isSelectedClassName = editor._config.theme.hrSelected ?? 'selected';\n    if (hrElem !== null) {\n      if (isSelected) {\n        addClassNamesToElement(hrElem, isSelectedClassName);\n      } else {\n        removeClassNamesFromElement(hrElem, isSelectedClassName);\n      }\n    }\n  }, [editor, isSelected, nodeKey]);\n  return null;\n}\nclass HorizontalRuleNode extends DecoratorNode {\n  static getType() {\n    return 'horizontalrule';\n  }\n  static clone(node) {\n    return new HorizontalRuleNode(node.__key);\n  }\n  static importJSON(serializedNode) {\n    return $createHorizontalRuleNode().updateFromJSON(serializedNode);\n  }\n  static importDOM() {\n    return {\n      hr: () => ({\n        conversion: $convertHorizontalRuleElement,\n        priority: 0\n      })\n    };\n  }\n  exportDOM() {\n    return {\n      element: document.createElement('hr')\n    };\n  }\n  createDOM(config) {\n    const element = document.createElement('hr');\n    addClassNamesToElement(element, config.theme.hr);\n    return element;\n  }\n  getTextContent() {\n    return '\\n';\n  }\n  isInline() {\n    return false;\n  }\n  updateDOM() {\n    return false;\n  }\n  decorate() {\n    return /*#__PURE__*/jsx(HorizontalRuleComponent, {\n      nodeKey: this.__key\n    });\n  }\n}\nfunction $convertHorizontalRuleElement() {\n  return {\n    node: $createHorizontalRuleNode()\n  };\n}\nfunction $createHorizontalRuleNode() {\n  return $applyNodeReplacement(new HorizontalRuleNode());\n}\nfunction $isHorizontalRuleNode(node) {\n  return node instanceof HorizontalRuleNode;\n}\n\nexport { $createHorizontalRuleNode, $isHorizontalRuleNode, HorizontalRuleNode, INSERT_HORIZONTAL_RULE_COMMAND };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,uBAAuB,QAAQ,wCAAwC;AAChF,SAASC,sBAAsB,EAAEC,aAAa,EAAEC,2BAA2B,QAAQ,gBAAgB;AACnG,SAASC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,aAAa,EAAEC,oBAAoB,QAAQ,SAAS;AAClH,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,GAAG,QAAQ,mBAAmB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,8BAA8B,GAAGP,aAAa,CAAC,gCAAgC,CAAC;AACtF,SAASQ,uBAAuBA,CAAC;EAC/BC;AACF,CAAC,EAAE;EACD,MAAM,CAACC,MAAM,CAAC,GAAGf,yBAAyB,CAAC,CAAC;EAC5C,MAAM,CAACgB,UAAU,EAAEC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,uBAAuB,CAACa,OAAO,CAAC;EAClFJ,SAAS,CAAC,MAAM;IACd,OAAOP,aAAa,CAACY,MAAM,CAACI,eAAe,CAACX,aAAa,EAAEY,KAAK,IAAI;MAClE,MAAMC,MAAM,GAAGN,MAAM,CAACO,eAAe,CAACR,OAAO,CAAC;MAC9C,IAAIM,KAAK,CAACG,MAAM,KAAKF,MAAM,EAAE;QAC3B,IAAI,CAACD,KAAK,CAACI,QAAQ,EAAE;UACnBN,cAAc,CAAC,CAAC;QAClB;QACAD,WAAW,CAAC,CAACD,UAAU,CAAC;QACxB,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,EAAEP,oBAAoB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACS,cAAc,EAAEH,MAAM,EAAEC,UAAU,EAAEF,OAAO,EAAEG,WAAW,CAAC,CAAC;EAC9DP,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGN,MAAM,CAACO,eAAe,CAACR,OAAO,CAAC;IAC9C,MAAMW,mBAAmB,GAAGV,MAAM,CAACW,OAAO,CAACC,KAAK,CAACC,UAAU,IAAI,UAAU;IACzE,IAAIP,MAAM,KAAK,IAAI,EAAE;MACnB,IAAIL,UAAU,EAAE;QACdd,sBAAsB,CAACmB,MAAM,EAAEI,mBAAmB,CAAC;MACrD,CAAC,MAAM;QACLrB,2BAA2B,CAACiB,MAAM,EAAEI,mBAAmB,CAAC;MAC1D;IACF;EACF,CAAC,EAAE,CAACV,MAAM,EAAEC,UAAU,EAAEF,OAAO,CAAC,CAAC;EACjC,OAAO,IAAI;AACb;AACA,MAAMe,kBAAkB,SAASvB,aAAa,CAAC;EAC7C,OAAOwB,OAAOA,CAAA,EAAG;IACf,OAAO,gBAAgB;EACzB;EACA,OAAOC,KAAKA,CAACC,IAAI,EAAE;IACjB,OAAO,IAAIH,kBAAkB,CAACG,IAAI,CAACC,KAAK,CAAC;EAC3C;EACA,OAAOC,UAAUA,CAACC,cAAc,EAAE;IAChC,OAAOC,yBAAyB,CAAC,CAAC,CAACC,cAAc,CAACF,cAAc,CAAC;EACnE;EACA,OAAOG,SAASA,CAAA,EAAG;IACjB,OAAO;MACLC,EAAE,EAAEA,CAAA,MAAO;QACTC,UAAU,EAAEC,6BAA6B;QACzCC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC;EACH;EACAC,SAASA,CAAA,EAAG;IACV,OAAO;MACLC,OAAO,EAAEC,QAAQ,CAACC,aAAa,CAAC,IAAI;IACtC,CAAC;EACH;EACAC,SAASA,CAACC,MAAM,EAAE;IAChB,MAAMJ,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;IAC5C5C,sBAAsB,CAAC0C,OAAO,EAAEI,MAAM,CAACrB,KAAK,CAACY,EAAE,CAAC;IAChD,OAAOK,OAAO;EAChB;EACAK,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI;EACb;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,KAAK;EACd;EACAC,SAASA,CAAA,EAAG;IACV,OAAO,KAAK;EACd;EACAC,QAAQA,CAAA,EAAG;IACT,OAAO,aAAazC,GAAG,CAACE,uBAAuB,EAAE;MAC/CC,OAAO,EAAE,IAAI,CAACmB;IAChB,CAAC,CAAC;EACJ;AACF;AACA,SAASQ,6BAA6BA,CAAA,EAAG;EACvC,OAAO;IACLT,IAAI,EAAEI,yBAAyB,CAAC;EAClC,CAAC;AACH;AACA,SAASA,yBAAyBA,CAAA,EAAG;EACnC,OAAO7B,qBAAqB,CAAC,IAAIsB,kBAAkB,CAAC,CAAC,CAAC;AACxD;AACA,SAASwB,qBAAqBA,CAACrB,IAAI,EAAE;EACnC,OAAOA,IAAI,YAAYH,kBAAkB;AAC3C;AAEA,SAASO,yBAAyB,EAAEiB,qBAAqB,EAAExB,kBAAkB,EAAEjB,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}