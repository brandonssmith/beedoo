{"ast":null,"code":"import React,{useEffect,useCallback}from'react';import{LexicalComposer}from'@lexical/react/LexicalComposer';import{RichTextPlugin}from'@lexical/react/LexicalRichTextPlugin';import{ContentEditable}from'@lexical/react/LexicalContentEditable';import{HistoryPlugin}from'@lexical/react/LexicalHistoryPlugin';import{AutoFocusPlugin}from'@lexical/react/LexicalAutoFocusPlugin';import{useLexicalComposerContext}from'@lexical/react/LexicalComposerContext';import{$getRoot,$getSelection,$isRangeSelection,$createTextNode}from'lexical';import{Bold,Italic,Underline,List,Link,AlignLeft,AlignCenter,AlignRight,Heading1,Heading2,Heading3}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Markdown shortcuts plugin\nfunction MarkdownShortcutsPlugin(){const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref=>{let{editorState,dirtyElements}=_ref;if(dirtyElements.size===0)return;editorState.read(()=>{const selection=$getSelection();if(!$isRangeSelection(selection))return;const text=selection.getTextContent();// Handle markdown shortcuts\nif(text.startsWith('**')&&text.endsWith('**')&&text.length>4){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(2,-2);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}else if(text.startsWith('*')&&text.endsWith('*')&&text.length>2){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(1,-1);newSelection.insertText(cleanText);newSelection.formatText('italic');}});}else if(text.startsWith('~')&&text.endsWith('~')&&text.length>2){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(1,-1);newSelection.insertText(cleanText);newSelection.formatText('underline');}});}else if(text.startsWith('# ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(2);newSelection.insertText(cleanText);// Apply header formatting (simplified - just make it bold and larger)\nnewSelection.formatText('bold');}});}else if(text.startsWith('## ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(3);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}else if(text.startsWith('### ')){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){const cleanText=text.slice(4);newSelection.insertText(cleanText);newSelection.formatText('bold');}});}});});},[editor]);return null;}// Toolbar component\nfunction ToolbarPlugin(){const[editor]=useLexicalComposerContext();const formatText=format=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){selection.formatText(format);}});};const formatHeader=level=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// For now, just make headers bold\n// In a full implementation, you'd create proper header nodes\nselection.formatText('bold');}});};const alignText=alignment=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// For now, just insert alignment markers\n// In a full implementation, you'd set proper CSS alignment\nconst marker=alignment==='left'?'':alignment==='center'?' [CENTER] ':' [RIGHT] ';selection.insertText(marker);}});};const insertLink=()=>{const url=prompt('Enter URL:');if(url){const linkText=prompt('Enter link text (optional):',url);const displayText=linkText||url;editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// Create markdown-style link\nconst markdownLink=`[${displayText}](${url})`;selection.insertText(markdownLink);}});}};const toggleList=()=>{editor.update(()=>{const selection=$getSelection();if($isRangeSelection(selection)){// Simple list implementation - just add bullet points\nconst text=selection.getTextContent();const lines=text.split('\\n');const formattedLines=lines.map(line=>`â€¢ ${line}`);selection.insertText(formattedLines.join('\\n'));}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('bold'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Bold (Ctrl+B)\",children:/*#__PURE__*/_jsx(Bold,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('italic'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Italic (Ctrl+I)\",children:/*#__PURE__*/_jsx(Italic,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatText('underline'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Underline (Ctrl+U)\",children:/*#__PURE__*/_jsx(Underline,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(1),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 1 (# )\",children:/*#__PURE__*/_jsx(Heading1,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(2),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 2 (## )\",children:/*#__PURE__*/_jsx(Heading2,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>formatHeader(3),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Heading 3 (### )\",children:/*#__PURE__*/_jsx(Heading3,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('left'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Left\",children:/*#__PURE__*/_jsx(AlignLeft,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('center'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Center\",children:/*#__PURE__*/_jsx(AlignCenter,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alignText('right'),className:\"p-2 hover:bg-gray-200 rounded\",title:\"Align Right\",children:/*#__PURE__*/_jsx(AlignRight,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-6 bg-gray-300\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleList,className:\"p-2 hover:bg-gray-200 rounded\",title:\"Bullet List\",children:/*#__PURE__*/_jsx(List,{className:\"w-4 h-4\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:insertLink,className:\"p-2 hover:bg-gray-200 rounded\",title:\"Insert Link\",children:/*#__PURE__*/_jsx(Link,{className:\"w-4 h-4\"})})]});}// Smart URL detection plugin\nfunction SmartURLDetectionPlugin(){const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref2=>{let{editorState,dirtyElements}=_ref2;if(dirtyElements.size===0)return;editorState.read(()=>{const selection=$getSelection();if(!$isRangeSelection(selection))return;const text=selection.getTextContent();// URL regex pattern - matches http/https URLs and www. URLs\nconst urlRegex=/((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;const matches=text.match(urlRegex);if(matches&&matches.length>0){// Check if we have unformatted URLs\nconst hasUnformattedUrls=matches.some(url=>{// Check if the URL is not already in markdown link format\nreturn!text.includes(`[${url}]`)&&!text.includes(`[${url.split('/').pop()}]`);});if(hasUnformattedUrls){editor.update(()=>{const newSelection=$getSelection();if($isRangeSelection(newSelection)){// Get the current text again\nconst currentText=newSelection.getTextContent();// Replace URLs with markdown-style links\nlet formattedText=currentText;matches.forEach(url=>{// Only format if it's not already formatted\nif(!formattedText.includes(`[${url}]`)){// Prepend https:// if it's a www. URL\nconst fullUrl=url.startsWith('www.')?`https://${url}`:url;// Create a shorter display text for the link\nconst displayText=url.length>50?url.substring(0,47)+'...':url;formattedText=formattedText.replace(url,`[${displayText}](${fullUrl})`);}});if(formattedText!==currentText){// Replace the entire selection with formatted text\nnewSelection.insertText(formattedText);}}});}}});});},[editor]);return null;}// Error boundary component\nfunction ErrorBoundary(_ref3){let{children}=_ref3;return/*#__PURE__*/_jsx(\"div\",{children:children});}const RichTextEditor=_ref4=>{let{value,onChange,placeholder=\"Start writing...\",className=\"\"}=_ref4;// Set up initial editor state from value (serialized state or plain text)\nconst initialEditorState=useCallback(editor=>{if(typeof value==='string'&&value.trim().length>0){let parsed=null;try{parsed=JSON.parse(value);}catch{// not JSON, treat as plain text\n}if(parsed&&typeof parsed==='object'&&parsed.root){// Looks like a Lexical serialized state\neditor.setEditorState(editor.parseEditorState(value));}else{// Fallback: treat as plain text\neditor.update(()=>{const root=$getRoot();root.clear();root.append($createTextNode(value));});}}},[value]);// Custom onChange plugin for serialized state\nfunction SerializedOnChangePlugin(_ref5){let{onChange}=_ref5;const[editor]=useLexicalComposerContext();useEffect(()=>{return editor.registerUpdateListener(_ref6=>{let{editorState}=_ref6;// Serialize the editor state as JSON string\nconst serialized=JSON.stringify(editorState.toJSON());onChange(serialized);});},[editor,onChange]);return null;}const initialConfig={namespace:'BeedooRichTextEditor',theme:{root:'outline-none min-h-[200px] p-4',text:{bold:'font-bold',italic:'italic',underline:'underline'}},onError:error=>{console.error('Lexical error:',error);},editorState:null,editable:true,initialEditorState};return/*#__PURE__*/_jsx(\"div\",{className:`border border-gray-300 rounded-md ${className}`,children:/*#__PURE__*/_jsxs(LexicalComposer,{initialConfig:initialConfig,children:[/*#__PURE__*/_jsx(ToolbarPlugin,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(RichTextPlugin,{contentEditable:/*#__PURE__*/_jsx(ContentEditable,{className:\"outline-none min-h-[200px] p-4\"}),placeholder:/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 left-4 text-gray-400 pointer-events-none\",children:placeholder}),ErrorBoundary:ErrorBoundary}),/*#__PURE__*/_jsx(SerializedOnChangePlugin,{onChange:onChange}),/*#__PURE__*/_jsx(MarkdownShortcutsPlugin,{}),/*#__PURE__*/_jsx(SmartURLDetectionPlugin,{}),/*#__PURE__*/_jsx(HistoryPlugin,{}),/*#__PURE__*/_jsx(AutoFocusPlugin,{})]})]})});};export default RichTextEditor;","map":{"version":3,"names":["React","useEffect","useCallback","LexicalComposer","RichTextPlugin","ContentEditable","HistoryPlugin","AutoFocusPlugin","useLexicalComposerContext","$getRoot","$getSelection","$isRangeSelection","$createTextNode","Bold","Italic","Underline","List","Link","AlignLeft","AlignCenter","AlignRight","Heading1","Heading2","Heading3","jsx","_jsx","jsxs","_jsxs","MarkdownShortcutsPlugin","editor","registerUpdateListener","_ref","editorState","dirtyElements","size","read","selection","text","getTextContent","startsWith","endsWith","length","update","newSelection","cleanText","slice","insertText","formatText","ToolbarPlugin","format","formatHeader","level","alignText","alignment","marker","insertLink","url","prompt","linkText","displayText","markdownLink","toggleList","lines","split","formattedLines","map","line","join","className","children","type","onClick","title","SmartURLDetectionPlugin","_ref2","urlRegex","matches","match","hasUnformattedUrls","some","includes","pop","currentText","formattedText","forEach","fullUrl","substring","replace","ErrorBoundary","_ref3","RichTextEditor","_ref4","value","onChange","placeholder","initialEditorState","trim","parsed","JSON","parse","root","setEditorState","parseEditorState","clear","append","SerializedOnChangePlugin","_ref5","_ref6","serialized","stringify","toJSON","initialConfig","namespace","theme","bold","italic","underline","onError","error","console","editable","contentEditable"],"sources":["C:/Code/beedoo/src/components/RichTextEditor.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useCallback } from 'react';\r\nimport { LexicalComposer } from '@lexical/react/LexicalComposer';\r\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\r\nimport { ContentEditable } from '@lexical/react/LexicalContentEditable';\r\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';\r\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin';\r\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\r\nimport { $getRoot, $getSelection, $isRangeSelection, $createTextNode } from 'lexical';\r\nimport type { LexicalEditor } from 'lexical';\r\nimport { Bold, Italic, Underline, List, Link, AlignLeft, AlignCenter, AlignRight, Heading1, Heading2, Heading3 } from 'lucide-react';\r\n\r\ninterface RichTextEditorProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n  className?: string;\r\n}\r\n\r\n// Markdown shortcuts plugin\r\nfunction MarkdownShortcutsPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // Handle markdown shortcuts\r\n        if (text.startsWith('**') && text.endsWith('**') && text.length > 4) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2, -2);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('*') && text.endsWith('*') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('italic');\r\n            }\r\n          });\r\n        } else if (text.startsWith('~') && text.endsWith('~') && text.length > 2) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(1, -1);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('underline');\r\n            }\r\n          });\r\n        } else if (text.startsWith('# ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(2);\r\n              newSelection.insertText(cleanText);\r\n              // Apply header formatting (simplified - just make it bold and larger)\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('## ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(3);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        } else if (text.startsWith('### ')) {\r\n          editor.update(() => {\r\n            const newSelection = $getSelection();\r\n            if ($isRangeSelection(newSelection)) {\r\n              const cleanText = text.slice(4);\r\n              newSelection.insertText(cleanText);\r\n              newSelection.formatText('bold');\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Toolbar component\r\nfunction ToolbarPlugin(): JSX.Element {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  const formatText = (format: 'bold' | 'italic' | 'underline') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        selection.formatText(format);\r\n      }\r\n    });\r\n  };\r\n\r\n  const formatHeader = (level: 1 | 2 | 3) => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just make headers bold\r\n        // In a full implementation, you'd create proper header nodes\r\n        selection.formatText('bold');\r\n      }\r\n    });\r\n  };\r\n\r\n  const alignText = (alignment: 'left' | 'center' | 'right') => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // For now, just insert alignment markers\r\n        // In a full implementation, you'd set proper CSS alignment\r\n        const marker = alignment === 'left' ? '' : alignment === 'center' ? ' [CENTER] ' : ' [RIGHT] ';\r\n        selection.insertText(marker);\r\n      }\r\n    });\r\n  };\r\n\r\n  const insertLink = () => {\r\n    const url = prompt('Enter URL:');\r\n    if (url) {\r\n      const linkText = prompt('Enter link text (optional):', url);\r\n      const displayText = linkText || url;\r\n      \r\n      editor.update(() => {\r\n        const selection = $getSelection();\r\n        if ($isRangeSelection(selection)) {\r\n          // Create markdown-style link\r\n          const markdownLink = `[${displayText}](${url})`;\r\n          selection.insertText(markdownLink);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleList = () => {\r\n    editor.update(() => {\r\n      const selection = $getSelection();\r\n      if ($isRangeSelection(selection)) {\r\n        // Simple list implementation - just add bullet points\r\n        const text = selection.getTextContent();\r\n        const lines = text.split('\\n');\r\n        const formattedLines = lines.map(line => `â€¢ ${line}`);\r\n        selection.insertText(formattedLines.join('\\n'));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-2 p-2 border-b border-gray-200 bg-gray-50\">\r\n      {/* Text Formatting */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('bold')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bold (Ctrl+B)\"\r\n      >\r\n        <Bold className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('italic')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Italic (Ctrl+I)\"\r\n      >\r\n        <Italic className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatText('underline')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Underline (Ctrl+U)\"\r\n      >\r\n        <Underline className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Headers */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(1)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 1 (# )\"\r\n      >\r\n        <Heading1 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(2)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 2 (## )\"\r\n      >\r\n        <Heading2 className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => formatHeader(3)}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Heading 3 (### )\"\r\n      >\r\n        <Heading3 className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Alignment */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('left')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Left\"\r\n      >\r\n        <AlignLeft className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('center')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Center\"\r\n      >\r\n        <AlignCenter className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => alignText('right')}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Align Right\"\r\n      >\r\n        <AlignRight className=\"w-4 h-4\" />\r\n      </button>\r\n      \r\n      <div className=\"w-px h-6 bg-gray-300\" />\r\n      \r\n      {/* Lists and Links */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={toggleList}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Bullet List\"\r\n      >\r\n        <List className=\"w-4 h-4\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={insertLink}\r\n        className=\"p-2 hover:bg-gray-200 rounded\"\r\n        title=\"Insert Link\"\r\n      >\r\n        <Link className=\"w-4 h-4\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Smart URL detection plugin\r\nfunction SmartURLDetectionPlugin(): JSX.Element | null {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerUpdateListener(({ editorState, dirtyElements }) => {\r\n      if (dirtyElements.size === 0) return;\r\n\r\n      editorState.read(() => {\r\n        const selection = $getSelection();\r\n        if (!$isRangeSelection(selection)) return;\r\n\r\n        const text = selection.getTextContent();\r\n        \r\n        // URL regex pattern - matches http/https URLs and www. URLs\r\n        const urlRegex = /((https?:\\/\\/[^\\s]+)|(www\\.[^\\s]+\\.[^\\s]+))/g;\r\n        const matches = text.match(urlRegex);\r\n        \r\n        if (matches && matches.length > 0) {\r\n          // Check if we have unformatted URLs\r\n          const hasUnformattedUrls = matches.some(url => {\r\n            // Check if the URL is not already in markdown link format\r\n            return !text.includes(`[${url}]`) && !text.includes(`[${url.split('/').pop()}]`);\r\n          });\r\n\r\n          if (hasUnformattedUrls) {\r\n            editor.update(() => {\r\n              const newSelection = $getSelection();\r\n              if ($isRangeSelection(newSelection)) {\r\n                // Get the current text again\r\n                const currentText = newSelection.getTextContent();\r\n                \r\n                // Replace URLs with markdown-style links\r\n                let formattedText = currentText;\r\n                matches.forEach(url => {\r\n                  // Only format if it's not already formatted\r\n                  if (!formattedText.includes(`[${url}]`)) {\r\n                    // Prepend https:// if it's a www. URL\r\n                    const fullUrl = url.startsWith('www.') ? `https://${url}` : url;\r\n                    // Create a shorter display text for the link\r\n                    const displayText = url.length > 50 ? url.substring(0, 47) + '...' : url;\r\n                    formattedText = formattedText.replace(url, `[${displayText}](${fullUrl})`);\r\n                  }\r\n                });\r\n                \r\n                if (formattedText !== currentText) {\r\n                  // Replace the entire selection with formatted text\r\n                  newSelection.insertText(formattedText);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [editor]);\r\n\r\n  return null;\r\n}\r\n\r\n// Error boundary component\r\nfunction ErrorBoundary({ children }: { children: React.ReactNode }): JSX.Element {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nconst RichTextEditor: React.FC<RichTextEditorProps> = ({ \r\n  value, \r\n  onChange, \r\n  placeholder = \"Start writing...\",\r\n  className = \"\"\r\n}) => {\r\n  // Set up initial editor state from value (serialized state or plain text)\r\n  const initialEditorState = useCallback((editor: LexicalEditor) => {\r\n    if (typeof value === 'string' && value.trim().length > 0) {\r\n      let parsed: any = null;\r\n      try {\r\n        parsed = JSON.parse(value);\r\n      } catch {\r\n        // not JSON, treat as plain text\r\n      }\r\n      if (parsed && typeof parsed === 'object' && parsed.root) {\r\n        // Looks like a Lexical serialized state\r\n        editor.setEditorState(editor.parseEditorState(value));\r\n      } else {\r\n        // Fallback: treat as plain text\r\n        editor.update(() => {\r\n          const root = $getRoot();\r\n          root.clear();\r\n          root.append($createTextNode(value));\r\n        });\r\n      }\r\n    }\r\n  }, [value]);\r\n\r\n  // Custom onChange plugin for serialized state\r\n  function SerializedOnChangePlugin({ onChange }: { onChange: (value: string) => void }): JSX.Element | null {\r\n    const [editor] = useLexicalComposerContext();\r\n    useEffect(() => {\r\n      return editor.registerUpdateListener(({ editorState }) => {\r\n        // Serialize the editor state as JSON string\r\n        const serialized = JSON.stringify(editorState.toJSON());\r\n        onChange(serialized);\r\n      });\r\n    }, [editor, onChange]);\r\n    return null;\r\n  }\r\n\r\n  const initialConfig = {\r\n    namespace: 'BeedooRichTextEditor',\r\n    theme: {\r\n      root: 'outline-none min-h-[200px] p-4',\r\n      text: {\r\n        bold: 'font-bold',\r\n        italic: 'italic',\r\n        underline: 'underline',\r\n      },\r\n    },\r\n    onError: (error: Error) => {\r\n      console.error('Lexical error:', error);\r\n    },\r\n    editorState: null,\r\n    editable: true,\r\n    initialEditorState,\r\n  };\r\n\r\n  return (\r\n    <div className={`border border-gray-300 rounded-md ${className}`}>\r\n      <LexicalComposer initialConfig={initialConfig}>\r\n        <ToolbarPlugin />\r\n        <div className=\"relative\">\r\n          <RichTextPlugin\r\n            contentEditable={\r\n              <ContentEditable \r\n                className=\"outline-none min-h-[200px] p-4\"\r\n              />\r\n            }\r\n            placeholder={\r\n              <div className=\"absolute top-4 left-4 text-gray-400 pointer-events-none\">\r\n                {placeholder}\r\n              </div>\r\n            }\r\n            ErrorBoundary={ErrorBoundary}\r\n          />\r\n          <SerializedOnChangePlugin onChange={onChange} />\r\n          <MarkdownShortcutsPlugin />\r\n          <SmartURLDetectionPlugin />\r\n          <HistoryPlugin />\r\n          <AutoFocusPlugin />\r\n        </div>\r\n      </LexicalComposer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RichTextEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}